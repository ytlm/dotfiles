{
	"folder_history":
	[
		"/home/ytl/ant",
		"/opt/platforms",
		"/home/ytl/platforms",
		"/home/ytl/ant/demo/platforms",
		"/home/ytl/platforms/comm_platform/sp/ydtc",
		"/home/ytl/cdn_platforms",
		"/home/ytl/Downloads/nginxlimitproxy-0.9.1",
		"/home/ytl/nginx"
	],
	"last_version": 3126,
	"last_window_id": 82,
	"log_indexing": false,
	"settings":
	{
		"new_window_height": 0.0,
		"new_window_settings":
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"curr",
						"currPeer\t(uceBalancer.lua)"
					],
					[
						"NG",
						"NGX_OK"
					],
					[
						"mp4",
						"mp4_value"
					],
					[
						"ct",
						"ctx"
					],
					[
						"printf",
						"printf\tprintf …"
					]
				]
			},
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 76.0,
				"last_filter": "pci",
				"selected_items":
				[
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pcl",
						"Package Control: List Packages"
					],
					[
						"Package Control: l",
						"Package Control: List Packages"
					],
					[
						"Package Control: i",
						"Package Control: Install Package"
					]
				],
				"width": 471.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/ytl/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/Package Control.user-ca-bundle",
				"/home/ytl/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
				"/home/ytl/platforms/default_platform/pg/lua/meitu_mvvideo11_filter.lua",
				"/home/ytl/platforms/comm_platform/sp_lua/meitu/mvvideo11_access.lua",
				"/home/ytl/platforms/default_platform/pg/lua/meitu_mvvideo10_filter.lua",
				"/home/ytl/platforms/comm_platform/sp_lua/meitu/mvvideo10_access.lua",
				"/opt/platforms/uce/conf/balancer.lua",
				"/opt/platforms/lualib/ant/frame.lua",
				"/opt/platforms/hsm/conf/hsm.conf",
				"/opt/platforms/hsm/conf/admin.conf",
				"/home/ytl/lua/test.lua",
				"/tmp/diff",
				"/home/ytl/.config/sublime-text-3/Packages/ConvertToUTF8/ConvertToUTF8.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/ConvertToUTF8.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/CTags.sublime-settings",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_core_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_parse.c",
				"/home/ytl/Desktop/WeChat.lnk",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/os/win32/ngx_win32_config.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_conf_file.c",
				"/home/ytl/ant/src/ngx_cache_enhanced/ngx_http_cache_enhanced_module.c",
				"/home/ytl/Desktop/notebook",
				"/home/ytl/.wine/system.reg",
				"/home/ytl/.wine/drive_c/windows/win.ini",
				"/home/ytl/Desktop/ftp",
				"/home/ytl/ant/src/ngx_cache_enhanced/ngx_http_cache_purge_module.c",
				"/data/webroot/m3u8/r0021jrku7o.320086.ts.m3u8",
				"/home/ytl/Desktop/1.c",
				"/home/ytl/Desktop/test.c",
				"/home/ytl/Desktop/t",
				"/opt/platforms/lualib/ant/request.lua",
				"/home/ytl/Desktop/struct ngx_http_request_t.c",
				"/home/ytl/1",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_request.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_request.h",
				"/home/ytl/ant/src/ngx_mp4_seek/ngx_http_mp4_seek_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_write_filter_module.c",
				"/home/ytl/his",
				"/home/ytl/ant/demo/platforms/lualib/ant/frame.lua",
				"/home/ytl/ant/src/ngx_traffic_log_module/ngx_http_traffic_log_filter_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_variables.h",
				"/data/webroot/sdmb.ts",
				"/data/webroot/sdmb.mp4",
				"/data/webroot/sdmb.",
				"/home/ytl/ant/demo/config.lua",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_core_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_conf_file.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_variables.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/os/unix/ngx_process_cycle.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/os/unix/ngx_process.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_string.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_core.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/LuaJIT-2.1-20160517/src/lj_def.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_config.h",
				"/home/ytl/ngx_http_mp4_seek_module.c",
				"/home/ytl/config.lua",
				"/home/ytl/ant/src/ngx_openresty/build/ngx_lua-0.10.6/t/073-backtrace.t",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_log.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_request_body.c.orig",
				"/home/ytl/ant/demo/platforms/lualib/plugin/demo/access.lua",
				"/home/ytl/Desktop/plan.md",
				"/home/ytl/platforms/lualib/ant/redis.lua",
				"/home/ytl/Desktop/tc_access.lua",
				"/home/ytl/Downloads/RedisLive/src/www/index.html",
				"/home/ytl/platforms/mgtv_platform/hsm/conf/admin.conf",
				"/home/ytl/platforms/mgtv_platform/sp_lua/mgtv/access_videost.lua",
				"/home/ytl/Desktop/test.lua",
				"/home/ytl/Desktop/临时/notebook",
				"/home/ytl/Desktop/文档/plan.md",
				"/home/ytl/ant/demo/platforms2/config.lua",
				"/home/ytl/cdn_platforms/default_platform/comm/header_clear.conf",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/mgtv/access_videost.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/mgtv/access_downst.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/yunduan/access_downst.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/yunduan/access_videost.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/yunduan/access_downst.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/yunduan/access_videost.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/mgtv/access_downst.lua",
				"/home/ytl/platforms/lualib/ant/request.lua",
				"/home/ytl/platforms/comm_platform/sp/templates/hsm_channel.conf.j2",
				"/home/ytl/platforms/mgtv_platform/sp/templates/hsm_channel.conf.j2",
				"/home/ytl/platforms/lualib/ant/admin.lua",
				"/home/ytl/platforms/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/platforms/comm_platform/hsm/conf/admin.conf",
				"/home/ytl/main.c",
				"/home/ytl/test_ant.sh",
				"/home/ytl/ant/demo/platforms2/hsm/conf/hsm.conf",
				"/home/ytl/ant/demo/platforms2/sp/redis_cache/hsm_redis_cache.conf",
				"/home/ytl/ant/demo/platforms/default_platform/lbf/conf/header_filter.lua",
				"/home/ytl/ant/demo/platforms/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/ant/demo/platforms2/sp_lua/demo_sp/access.lua",
				"/home/ytl/ant/demo/platforms2/sp/demo_sp/hsm_demo.conf",
				"/home/ytl/ant/demo/platforms2/pg/conf/pg.conf",
				"/home/ytl/ant/demo/platforms2/sp/demo_sp/pg_demo.conf",
				"/home/ytl/ant/demo/platforms/demo_platform/hsm/conf/hsm.conf",
				"/home/ytl/ant/demo/platforms2/default_platform/env/env.json",
				"/home/ytl/ant/demo/platforms2/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/ant/demo/platforms2/demo_platform/env/env.json",
				"/home/ytl/ant/demo/platforms2/hsm/conf/admin.conf",
				"/home/ytl/ant/demo/platforms2/demo_platform/env/auth.conf",
				"/home/ytl/ant/demo/platforms/default_platform/env/env.json",
				"/home/ytl/ant/demo/platforms/demo_platform/env/env.json",
				"/home/ytl/Downloads/zh.reg",
				"/home/ytl/sublime-imfix.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/Desktop/临时/现网日志.xlsx",
				"/home/ytl/Desktop/临时/4杨廷龙.JPG",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_proxy_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event_pipe.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_connection.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c.orig",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event_pipe.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/resty.index",
				"/home/ytl/ant/src/ngx_openresty/build/pod/nginx/ngx_http_mp4_module.pod",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_proxy_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/event/ngx_event_pipe.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/nginx/src/core/ngx_parse.c",
				"/home/ytl/nginx/src/core/ngx_conf_file.c",
				"/home/ytl/nginx/src/http/ngx_http_core_module.c",
				"/home/ytl/nginx/src/http/ngx_http_core_module.h",
				"/home/ytl/nginx/src/http/modules/ngx_http_proxy_module.c"
			],
			"find":
			{
				"height": 37.0
			},
			"find_in_files":
			{
				"height": 95.0,
				"where_history":
				[
					"",
					"<open folders>,/home/ytl/ant",
					"<open folders>"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"failTimeOut",
					"setCacheControl1",
					"currPeer",
					"roundWeightPolicy",
					"checkDown",
					"initHealthCheck",
					"expire",
					" down = false",
					", down = false",
					" failed = 0,",
					"add_timer",
					"product",
					"maxFails",
					"arg_start",
					"start",
					"expire",
					"limitafter",
					"limitrate",
					"limit_rate",
					"Tahoma",
					"purge_time",
					"ngx_http_cache_purge_record_walk",
					"要求",
					"ngx_http_finalize_request",
					"ngx_http_post_request",
					"ngx_http_postpone_filter_add",
					"ngx_http_subrequest",
					"ngx_http_postponed_request_t",
					"limit_rate_after",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_arg_discard",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_process_finish",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_mp4_seek_range_size",
					"ngx_http_mp4_seek_del_header",
					"ngx_http_mp4_seek_subrequest_send",
					"getSessionID",
					"getBakConfig",
					"updateConfig",
					"NGX_HTTP_MP4_SEEK_STATE_INIT",
					"ngx_http_core_main_conf_t",
					"ngx_http_mp4_seek_init",
					"ngx_http_mp4_seek_read_trak_atom",
					"ngx_http_mp4_seek_read_atom",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_subrequest_send",
					"ctx->range",
					"ngx_http_variable_mp4_range",
					"ctx->range",
					"mp4_range",
					"ant_mp4_seek",
					"key",
					"mp4",
					"ngx_http_mp4_seek_header_filter",
					"args",
					"ctx->args",
					"}\n",
					"ngx_http_mp4_seek_subrequest_send",
					"mlcf->start",
					"mlcf",
					"mp4_value",
					"mp4_end",
					"mp4_start",
					"ant_mp4_seek",
					"ngx_http_mp4_seek_merge_conf",
					"ngx_http_mp4_seek_create_conf",
					"NGX_CONF_UNSET_SIZE",
					"ngx_http_mp4_seek_create_conf",
					"ngx_http_mp4_seek_conf_t",
					"ant_mp4_seek",
					"    }",
					"ant_mp4_seek",
					"ngx_spawn_process",
					"ngx_start_worker_processes",
					"ngx_worker_process_cycle",
					"ngx_http_variable_t",
					"ngx_http_mp4_seek_vars",
					"ngx_worker_process_cycle",
					"ngx_cache_purge_process_handler",
					"circle",
					"ngx_http_variable_value_t",
					"ngx_http_mp4_seek_get_var",
					"ant_mp4_seek",
					"ngx_http_mp4_seek_get_var",
					"ngx_http_mp4_seek_vars",
					"ngx_http_mp4_seek_get_var",
					"start",
					"ngx_http_mp4_seek_conf_t",
					"mlcf",
					"state",
					"NGX_HTTP_MP4_SEEK_STATE_INIT",
					"state",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_log_error",
					"proxy_mp4_seek",
					"start",
					"ngx_sprintf",
					"printf",
					"ngx_str_print",
					"ngx_str_printf",
					"ngx_printf",
					"proxy_mp4_seek",
					"ngx_log_error",
					"ngx_log",
					"ant_mp4_seek",
					"handleCacheKey",
					"confTbale",
					"channel",
					"8888",
					"***\n",
					"end",
					"header_filter_lua",
					"ngx_http_proxy_merge_loc_conf",
					"ngx_http_proxy_create_loc_conf",
					"ngx_http_proxy_create_main_conf",
					"ngx_http_proxy_vars",
					"ngx_http_proxy_add_variables",
					"ngx_http_proxy_vars",
					"ngx_http_proxy_add_variables",
					"proxy_max_temp_file_size",
					"NGX_HTTP_UPSTREAM_IGN_XA_REDIRECT",
					"ngx_http_upstream_process_buffering",
					"ngx_http_upstream_process_limit_rate"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"incremental_find":
			{
				"height": 27.0
			},
			"input":
			{
				"height": 37.0
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 126.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"replace":
			{
				"height": 50.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"673",
						"src/ngx_openresty/build/ngx_lua-0.10.6/t/073-backtrace.t"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 221.0,
			"status_bar_visible": true,
			"template_settings":
			{
			}
		},
		"new_window_width": 0.0
	},
	"windows":
	[
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"NG",
						"NGX_OK"
					],
					[
						"mp4",
						"mp4_value"
					],
					[
						"ct",
						"ctx"
					],
					[
						"printf",
						"printf\tprintf …"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "Searching 8674 files for \"ngx_http_upstream_get_round_robin_peer\"\n\n/home/ytl/ant/.tags:\n 51551  ngx_http_upstream_get_least_conn_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_upstream_least_conn_module.c\t/^ngx_http_upstream_get_least_conn_peer(ngx_peer_connection_t *pc, void *data)$/;\"\tf\tfile:\n 51552  ngx_http_upstream_get_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_get_peer(ngx_http_upstream_rr_peer_data_t *rrp)$/;\"\tf\tfile:\n 51553: ngx_http_upstream_get_round_robin_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)$/;\"\tf\n 51554  ngx_http_upstream_handler\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c\t/^ngx_http_upstream_handler(ngx_event_t *ev)$/;\"\tf\tfile:\n 51555  ngx_http_upstream_handler_pt\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.h\t/^typedef void (*ngx_http_upstream_handler_pt)(ngx_http_request_t *r,$/;\"\tt\n\n/home/ytl/ant/.tags_sorted_by_file:\n 21827  ngx_http_upstream_free_round_robin_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_free_round_robin_peer(ngx_peer_connection_t *pc, void *data,$/;\"\tf\n 21828  ngx_http_upstream_get_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_get_peer(ngx_http_upstream_rr_peer_data_t *rrp)$/;\"\tf\tfile:\n 21829: ngx_http_upstream_get_round_robin_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)$/;\"\tf\n 21830  ngx_http_upstream_init_round_robin\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_init_round_robin(ngx_conf_t *cf,$/;\"\tf\n 21831  ngx_http_upstream_init_round_robin_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_init_round_robin_peer(ngx_http_request_t *r,$/;\"\tf\n\n/home/ytl/ant/tags:\n 99839  ngx_http_upstream_get_peer\tsrc/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_get_peer(ngx_http_upstream_rr_peer_data_t *rrp)$/;\"\tf\tfile:\n 99840  ngx_http_upstream_get_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_get_peer(ngx_http_upstream_rr_peer_data_t *rrp)$/;\"\tf\tfile:\n 99841: ngx_http_upstream_get_round_robin_peer\tsrc/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)$/;\"\tf\n 99842: ngx_http_upstream_get_round_robin_peer\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c\t/^ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)$/;\"\tf\n 99843  ngx_http_upstream_handler\tsrc/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream.c\t/^ngx_http_upstream_handler(ngx_event_t *ev)$/;\"\tf\tfile:\n 99844  ngx_http_upstream_handler\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c\t/^ngx_http_upstream_handler(ngx_event_t *ev)$/;\"\tf\tfile:\n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/objs/nginx:\n    <binary>\n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c:\n  278      }\n  279  \n  280:     r->upstream->peer.get = ngx_http_upstream_get_round_robin_peer;\n  281      r->upstream->peer.free = ngx_http_upstream_free_round_robin_peer;\n  282      r->upstream->peer.tries = ngx_http_upstream_tries(rrp->peers);\n  ...\n  395      }\n  396  \n  397:     r->upstream->peer.get = ngx_http_upstream_get_round_robin_peer;\n  398      r->upstream->peer.free = ngx_http_upstream_free_round_robin_peer;\n  399      r->upstream->peer.tries = ngx_http_upstream_tries(rrp->peers);\n  ...\n  408  \n  409  ngx_int_t\n  410: ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)\n  411  {\n  412      ngx_http_upstream_rr_peer_data_t  *rrp = data;\n  ...\n  477          ngx_http_upstream_rr_peers_unlock(peers);\n  478  \n  479:         rc = ngx_http_upstream_get_round_robin_peer(pc, rrp);\n  480  \n  481          if (rc != NGX_BUSY) {\n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h:\n  133  ngx_int_t ngx_http_upstream_create_round_robin_peer(ngx_http_request_t *r,\n  134      ngx_http_upstream_resolved_t *ur);\n  135: ngx_int_t ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc,\n  136      void *data);\n  137  void ngx_http_upstream_free_round_robin_peer(ngx_peer_connection_t *pc,\n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_upstream_hash_module.c:\n  154      hp->rehash = 0;\n  155      hp->hash = 0;\n  156:     hp->get_rr_peer = ngx_http_upstream_get_round_robin_peer;\n  157  \n  158      return NGX_OK;\n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_upstream_ip_hash_module.c:\n  140      iphp->hash = 89;\n  141      iphp->tries = 0;\n  142:     iphp->get_rr_peer = ngx_http_upstream_get_round_robin_peer;\n  143  \n  144      return NGX_OK;\n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_upstream_least_conn_module.c:\n  113  \n  114      if (rrp->peers->single) {\n  115:         return ngx_http_upstream_get_round_robin_peer(pc, rrp);\n  116      }\n  117  \n\n/home/ytl/ant/src/ngx_openresty/build/ngx_lua-0.10.6/src/ngx_http_lua_balancer.c:\n  342      }\n  343  \n  344:     return ngx_http_upstream_get_round_robin_peer(pc, &bp->rrp);\n  345  }\n  346  \n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c:\n  278      }\n  279  \n  280:     r->upstream->peer.get = ngx_http_upstream_get_round_robin_peer;\n  281      r->upstream->peer.free = ngx_http_upstream_free_round_robin_peer;\n  282      r->upstream->peer.tries = ngx_http_upstream_tries(rrp->peers);\n  ...\n  395      }\n  396  \n  397:     r->upstream->peer.get = ngx_http_upstream_get_round_robin_peer;\n  398      r->upstream->peer.free = ngx_http_upstream_free_round_robin_peer;\n  399      r->upstream->peer.tries = ngx_http_upstream_tries(rrp->peers);\n  ...\n  408  \n  409  ngx_int_t\n  410: ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)\n  411  {\n  412      ngx_http_upstream_rr_peer_data_t  *rrp = data;\n  ...\n  477          ngx_http_upstream_rr_peers_unlock(peers);\n  478  \n  479:         rc = ngx_http_upstream_get_round_robin_peer(pc, rrp);\n  480  \n  481          if (rc != NGX_BUSY) {\n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h:\n  133  ngx_int_t ngx_http_upstream_create_round_robin_peer(ngx_http_request_t *r,\n  134      ngx_http_upstream_resolved_t *ur);\n  135: ngx_int_t ngx_http_upstream_get_round_robin_peer(ngx_peer_connection_t *pc,\n  136      void *data);\n  137  void ngx_http_upstream_free_round_robin_peer(ngx_peer_connection_t *pc,\n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_upstream_hash_module.c:\n  154      hp->rehash = 0;\n  155      hp->hash = 0;\n  156:     hp->get_rr_peer = ngx_http_upstream_get_round_robin_peer;\n  157  \n  158      return NGX_OK;\n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_upstream_ip_hash_module.c:\n  140      iphp->hash = 89;\n  141      iphp->tries = 0;\n  142:     iphp->get_rr_peer = ngx_http_upstream_get_round_robin_peer;\n  143  \n  144      return NGX_OK;\n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_upstream_least_conn_module.c:\n  113  \n  114      if (rrp->peers->single) {\n  115:         return ngx_http_upstream_get_round_robin_peer(pc, rrp);\n  116      }\n  117  \n\n/home/ytl/ant/src/ngx_openresty/bundle/ngx_lua-0.10.6/src/ngx_http_lua_balancer.c:\n  342      }\n  343  \n  344:     return ngx_http_upstream_get_round_robin_peer(pc, &bp->rrp);\n  345  }\n  346  \n\n29 matches across 16 files\n\n\nSearching 8674 files for \"effective_weight\"\n\n/home/ytl/ant/.tags:\n 37883  ediPartyName\tsrc/openssl/crypto/x509v3/x509v3.h\t/^        EDIPARTYNAME *ediPartyName;$/;\"\tm\tunion:GENERAL_NAME_st::__anon992\n 37884  eendian\tsrc/ngx_openresty/bundle/LuaJIT-2.1-20160517/src/lj_gdbjit.c\t/^  uint8_t eendian;$/;\"\tm\tstruct:ELFheader\tfile:\n 37885: effective_weight\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h\t/^    ngx_int_t                       effective_weight;$/;\"\tm\tstruct:ngx_http_upstream_rr_peer_s\n 37886: effective_weight\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h\t/^    ngx_int_t                        effective_weight;$/;\"\tm\tstruct:ngx_stream_upstream_rr_peer_s\n 37887  eflag\tsrc/openssl/crypto/des/des.c\t/^int vflag, cflag, eflag, dflag, kflag, bflag, fflag, sflag, uflag, flag3,$/;\"\tv\n 37888  egdsocket\tsrc/openssl/apps/app_rand.c\t/^static int egdsocket = 0;$/;\"\tv\tfile:\n\n/home/ytl/ant/.tags_sorted_by_file:\n 21841  data\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h\t/^    uintptr_t                       data;$/;\"\tm\tstruct:__anon546\n 21842  down\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h\t/^    ngx_uint_t                      down;          \\/* unsigned  down:1; *\\/$/;\"\tm\tstruct:ngx_http_upstream_rr_peer_s\n 21843: effective_weight\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h\t/^    ngx_int_t                       effective_weight;$/;\"\tm\tstruct:ngx_http_upstream_rr_peer_s\n 21844  fail_timeout\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h\t/^    time_t                          fail_timeout;$/;\"\tm\tstruct:ngx_http_upstream_rr_peer_s\n 21845  fails\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h\t/^    ngx_uint_t                      fails;$/;\"\tm\tstruct:ngx_http_upstream_rr_peer_s\n .....\n 24596  data\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h\t/^    uintptr_t                        data;$/;\"\tm\tstruct:__anon652\n 24597  down\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h\t/^    ngx_uint_t                       down;         \\/* unsigned  down:1; *\\/$/;\"\tm\tstruct:ngx_stream_upstream_rr_peer_s\n 24598: effective_weight\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h\t/^    ngx_int_t                        effective_weight;$/;\"\tm\tstruct:ngx_stream_upstream_rr_peer_s\n 24599  fail_timeout\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h\t/^    time_t                           fail_timeout;$/;\"\tm\tstruct:ngx_stream_upstream_rr_peer_s\n 24600  fails\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h\t/^    ngx_uint_t                       fails;$/;\"\tm\tstruct:ngx_stream_upstream_rr_peer_s\n\n/home/ytl/ant/tags:\n 74192  eendian\tsrc/ngx_openresty/build/LuaJIT-2.1-20160517/src/lj_gdbjit.c\t/^  uint8_t eendian;$/;\"\tm\tstruct:ELFheader\tfile:\n 74193  eendian\tsrc/ngx_openresty/bundle/LuaJIT-2.1-20160517/src/lj_gdbjit.c\t/^  uint8_t eendian;$/;\"\tm\tstruct:ELFheader\tfile:\n 74194: effective_weight\tsrc/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h\t/^    ngx_int_t                       effective_weight;$/;\"\tm\tstruct:ngx_http_upstream_rr_peer_s\n 74195: effective_weight\tsrc/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h\t/^    ngx_int_t                        effective_weight;$/;\"\tm\tstruct:ngx_stream_upstream_rr_peer_s\n 74196: effective_weight\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h\t/^    ngx_int_t                       effective_weight;$/;\"\tm\tstruct:ngx_http_upstream_rr_peer_s\n 74197: effective_weight\tsrc/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h\t/^    ngx_int_t                        effective_weight;$/;\"\tm\tstruct:ngx_stream_upstream_rr_peer_s\n 74198  eflag\tsrc/openssl/crypto/des/des.c\t/^int vflag, cflag, eflag, dflag, kflag, bflag, fflag, sflag, uflag, flag3,$/;\"\tv\n 74199  egdsocket\tsrc/openssl/apps/app_rand.c\t/^static int egdsocket = 0;$/;\"\tv\tfile:\n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/objs/nginx:\n    <binary>\n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c:\n   91                  peer[n].name = server[i].addrs[j].name;\n   92                  peer[n].weight = server[i].weight;\n   93:                 peer[n].effective_weight = server[i].weight;\n   94                  peer[n].current_weight = 0;\n   95                  peer[n].max_fails = server[i].max_fails;\n   ..\n  154                  peer[n].name = server[i].addrs[j].name;\n  155                  peer[n].weight = server[i].weight;\n  156:                 peer[n].effective_weight = server[i].weight;\n  157                  peer[n].current_weight = 0;\n  158                  peer[n].max_fails = server[i].max_fails;\n  ...\n  222          peer[i].name = u.addrs[i].name;\n  223          peer[i].weight = 1;\n  224:         peer[i].effective_weight = 1;\n  225          peer[i].current_weight = 0;\n  226          peer[i].max_fails = 1;\n  ...\n  336          peer[0].name = ur->host;\n  337          peer[0].weight = 1;\n  338:         peer[0].effective_weight = 1;\n  339          peer[0].current_weight = 0;\n  340          peer[0].max_fails = 1;\n  ...\n  369              peer[i].name.data = p;\n  370              peer[i].weight = 1;\n  371:             peer[i].effective_weight = 1;\n  372              peer[i].current_weight = 0;\n  373              peer[i].max_fails = 1;\n  ...\n  541          }\n  542  \n  543:         peer->current_weight += peer->effective_weight;\n  544:         total += peer->effective_weight;\n  545  \n  546:         if (peer->effective_weight < peer->weight) {\n  547:             peer->effective_weight++;\n  548          }\n  549  \n  ...\n  613  \n  614          if (peer->max_fails) {\n  615:             peer->effective_weight -= peer->weight / peer->max_fails;\n  616  \n  617              if (peer->fails >= peer->max_fails) {\n  ...\n  623          ngx_log_debug2(NGX_LOG_DEBUG_HTTP, pc->log, 0,\n  624                         \"free rr peer failed: %p %i\",\n  625:                        peer, peer->effective_weight);\n  626  \n  627:         if (peer->effective_weight < 0) {\n  628:             peer->effective_weight = 0;\n  629          }\n  630  \n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h:\n   24  \n   25      ngx_int_t                       current_weight;\n   26:     ngx_int_t                       effective_weight;\n   27      ngx_int_t                       weight;\n   28  \n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_upstream_hash_module.c:\n  550              }\n  551  \n  552:             peer->current_weight += peer->effective_weight;\n  553:             total += peer->effective_weight;\n  554  \n  555:             if (peer->effective_weight < peer->weight) {\n  556:                 peer->effective_weight++;\n  557              }\n  558  \n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_upstream_least_conn_module.c:\n  211              }\n  212  \n  213:             peer->current_weight += peer->effective_weight;\n  214:             total += peer->effective_weight;\n  215  \n  216:             if (peer->effective_weight < peer->weight) {\n  217:                 peer->effective_weight++;\n  218              }\n  219  \n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_upstream_hash_module.c:\n  551              }\n  552  \n  553:             peer->current_weight += peer->effective_weight;\n  554:             total += peer->effective_weight;\n  555  \n  556:             if (peer->effective_weight < peer->weight) {\n  557:                 peer->effective_weight++;\n  558              }\n  559  \n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_upstream_least_conn_module.c:\n  207              }\n  208  \n  209:             peer->current_weight += peer->effective_weight;\n  210:             total += peer->effective_weight;\n  211  \n  212:             if (peer->effective_weight < peer->weight) {\n  213:                 peer->effective_weight++;\n  214              }\n  215  \n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.c:\n   91                  peer[n].name = server[i].addrs[j].name;\n   92                  peer[n].weight = server[i].weight;\n   93:                 peer[n].effective_weight = server[i].weight;\n   94                  peer[n].current_weight = 0;\n   95                  peer[n].max_fails = server[i].max_fails;\n   ..\n  154                  peer[n].name = server[i].addrs[j].name;\n  155                  peer[n].weight = server[i].weight;\n  156:                 peer[n].effective_weight = server[i].weight;\n  157                  peer[n].current_weight = 0;\n  158                  peer[n].max_fails = server[i].max_fails;\n  ...\n  222          peer[i].name = u.addrs[i].name;\n  223          peer[i].weight = 1;\n  224:         peer[i].effective_weight = 1;\n  225          peer[i].current_weight = 0;\n  226          peer[i].max_fails = 1;\n  ...\n  426          }\n  427  \n  428:         peer->current_weight += peer->effective_weight;\n  429:         total += peer->effective_weight;\n  430  \n  431:         if (peer->effective_weight < peer->weight) {\n  432:             peer->effective_weight++;\n  433          }\n  434  \n  ...\n  495  \n  496          if (peer->max_fails) {\n  497:             peer->effective_weight -= peer->weight / peer->max_fails;\n  498  \n  499              if (peer->fails >= peer->max_fails) {\n  ...\n  505          ngx_log_debug2(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n  506                         \"free rr peer failed: %p %i\",\n  507:                        peer, peer->effective_weight);\n  508  \n  509:         if (peer->effective_weight < 0) {\n  510:             peer->effective_weight = 0;\n  511          }\n  512  \n\n/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h:\n   24  \n   25      ngx_int_t                        current_weight;\n   26:     ngx_int_t                        effective_weight;\n   27      ngx_int_t                        weight;\n   28  \n\n/home/ytl/ant/src/ngx_openresty/build/ngx_lua_upstream-0.06/src/ngx_http_lua_upstream_module.c:\n  443      lua_rawset(L, -3);\n  444  \n  445:     lua_pushliteral(L, \"effective_weight\");\n  446:     lua_pushinteger(L, (lua_Integer) peer->effective_weight);\n  447      lua_rawset(L, -3);\n  448  \n\n/home/ytl/ant/src/ngx_openresty/build/ngx_lua_upstream-0.06/t/sanity.t:\n  228      GET /t\n  229  --- response_body_like chop\n  230: ^\\[\\{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"\\d{1,3}(?:\\.\\d{1,3}){3}:80\",\"weight\":1\\}(?:,\\{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":\\d+,\"max_fails\":1,\"name\":\"\\d{1,3}(?:\\.\\d{1,3}){3}:80\",\"weight\":1\\})+\\]$\n  231  \n  232  --- no_error_log\n  ...\n  268      GET /t\n  269  --- response_body\n  270: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":4,\"fail_timeout\":53,\"fails\":0,\"id\":0,\"max_fails\":100,\"name\":\"127.0.0.1:80\",\"weight\":4},{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":1,\"max_fails\":1,\"name\":\"106.184.1.99:81\",\"weight\":1}]\n  271: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.2:80\",\"weight\":1}]\n  272  --- no_error_log\n  273  [error]\n  ...\n  308      GET /t\n  309  --- response_body\n  310: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":5,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.6:80\",\"weight\":1}]\n  311: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.3:80\",\"weight\":1},{\"conns\":0,\"current_weight\":0,\"effective_weight\":7,\"fail_timeout\":23,\"fails\":0,\"id\":1,\"max_fails\":200,\"name\":\"127.0.0.4:80\",\"weight\":7}]\n  312  --- no_error_log\n  313  [error]\n  ...\n  345      GET /t\n  346  --- response_body\n  347: [{\"conns\":0,\"current_weight\":0,\"down\":true,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.2:80\",\"weight\":1}]\n  348  --- no_error_log\n  349  [error]\n  ...\n  417      GET /t\n  418  --- response_body\n  419: [{\"conns\":0,\"current_weight\":0,\"down\":true,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.3:80\",\"weight\":1},{\"conns\":0,\"current_weight\":0,\"effective_weight\":7,\"fail_timeout\":23,\"fails\":0,\"id\":1,\"max_fails\":200,\"name\":\"127.0.0.4:80\",\"weight\":7}]\n  420  --- no_error_log\n  421  [error]\n  ...\n  459      GET /t\n  460  --- response_body\n  461: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.3:80\",\"weight\":1},{\"conns\":0,\"current_weight\":0,\"effective_weight\":7,\"fail_timeout\":23,\"fails\":0,\"id\":1,\"max_fails\":200,\"name\":\"127.0.0.4:80\",\"weight\":7}]\n  462  --- no_error_log\n  463  [error]\n  ...\n  496      GET /t\n  497  --- response_body\n  498: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.3:80\",\"weight\":1},{\"conns\":0,\"current_weight\":0,\"down\":true,\"effective_weight\":7,\"fail_timeout\":23,\"fails\":0,\"id\":1,\"max_fails\":200,\"name\":\"127.0.0.4:80\",\"weight\":7}]\n  499  --- no_error_log\n  500  [error]\n\n/home/ytl/ant/src/ngx_openresty/build/pod/ngx_lua_upstream-0.06/ngx_lua_upstream-0.06.pod:\n  152  =item *\n  153  \n  154: effective_weight\n  155  \n  156  =item *\n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c:\n   91                  peer[n].name = server[i].addrs[j].name;\n   92                  peer[n].weight = server[i].weight;\n   93:                 peer[n].effective_weight = server[i].weight;\n   94                  peer[n].current_weight = 0;\n   95                  peer[n].max_fails = server[i].max_fails;\n   ..\n  154                  peer[n].name = server[i].addrs[j].name;\n  155                  peer[n].weight = server[i].weight;\n  156:                 peer[n].effective_weight = server[i].weight;\n  157                  peer[n].current_weight = 0;\n  158                  peer[n].max_fails = server[i].max_fails;\n  ...\n  222          peer[i].name = u.addrs[i].name;\n  223          peer[i].weight = 1;\n  224:         peer[i].effective_weight = 1;\n  225          peer[i].current_weight = 0;\n  226          peer[i].max_fails = 1;\n  ...\n  336          peer[0].name = ur->host;\n  337          peer[0].weight = 1;\n  338:         peer[0].effective_weight = 1;\n  339          peer[0].current_weight = 0;\n  340          peer[0].max_fails = 1;\n  ...\n  369              peer[i].name.data = p;\n  370              peer[i].weight = 1;\n  371:             peer[i].effective_weight = 1;\n  372              peer[i].current_weight = 0;\n  373              peer[i].max_fails = 1;\n  ...\n  541          }\n  542  \n  543:         peer->current_weight += peer->effective_weight;\n  544:         total += peer->effective_weight;\n  545  \n  546:         if (peer->effective_weight < peer->weight) {\n  547:             peer->effective_weight++;\n  548          }\n  549  \n  ...\n  613  \n  614          if (peer->max_fails) {\n  615:             peer->effective_weight -= peer->weight / peer->max_fails;\n  616  \n  617              if (peer->fails >= peer->max_fails) {\n  ...\n  623          ngx_log_debug2(NGX_LOG_DEBUG_HTTP, pc->log, 0,\n  624                         \"free rr peer failed: %p %i\",\n  625:                        peer, peer->effective_weight);\n  626  \n  627:         if (peer->effective_weight < 0) {\n  628:             peer->effective_weight = 0;\n  629          }\n  630  \n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h:\n   24  \n   25      ngx_int_t                       current_weight;\n   26:     ngx_int_t                       effective_weight;\n   27      ngx_int_t                       weight;\n   28  \n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_upstream_hash_module.c:\n  550              }\n  551  \n  552:             peer->current_weight += peer->effective_weight;\n  553:             total += peer->effective_weight;\n  554  \n  555:             if (peer->effective_weight < peer->weight) {\n  556:                 peer->effective_weight++;\n  557              }\n  558  \n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_upstream_least_conn_module.c:\n  211              }\n  212  \n  213:             peer->current_weight += peer->effective_weight;\n  214:             total += peer->effective_weight;\n  215  \n  216:             if (peer->effective_weight < peer->weight) {\n  217:                 peer->effective_weight++;\n  218              }\n  219  \n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_hash_module.c:\n  551              }\n  552  \n  553:             peer->current_weight += peer->effective_weight;\n  554:             total += peer->effective_weight;\n  555  \n  556:             if (peer->effective_weight < peer->weight) {\n  557:                 peer->effective_weight++;\n  558              }\n  559  \n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_least_conn_module.c:\n  207              }\n  208  \n  209:             peer->current_weight += peer->effective_weight;\n  210:             total += peer->effective_weight;\n  211  \n  212:             if (peer->effective_weight < peer->weight) {\n  213:                 peer->effective_weight++;\n  214              }\n  215  \n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.c:\n   91                  peer[n].name = server[i].addrs[j].name;\n   92                  peer[n].weight = server[i].weight;\n   93:                 peer[n].effective_weight = server[i].weight;\n   94                  peer[n].current_weight = 0;\n   95                  peer[n].max_fails = server[i].max_fails;\n   ..\n  154                  peer[n].name = server[i].addrs[j].name;\n  155                  peer[n].weight = server[i].weight;\n  156:                 peer[n].effective_weight = server[i].weight;\n  157                  peer[n].current_weight = 0;\n  158                  peer[n].max_fails = server[i].max_fails;\n  ...\n  222          peer[i].name = u.addrs[i].name;\n  223          peer[i].weight = 1;\n  224:         peer[i].effective_weight = 1;\n  225          peer[i].current_weight = 0;\n  226          peer[i].max_fails = 1;\n  ...\n  426          }\n  427  \n  428:         peer->current_weight += peer->effective_weight;\n  429:         total += peer->effective_weight;\n  430  \n  431:         if (peer->effective_weight < peer->weight) {\n  432:             peer->effective_weight++;\n  433          }\n  434  \n  ...\n  495  \n  496          if (peer->max_fails) {\n  497:             peer->effective_weight -= peer->weight / peer->max_fails;\n  498  \n  499              if (peer->fails >= peer->max_fails) {\n  ...\n  505          ngx_log_debug2(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n  506                         \"free rr peer failed: %p %i\",\n  507:                        peer, peer->effective_weight);\n  508  \n  509:         if (peer->effective_weight < 0) {\n  510:             peer->effective_weight = 0;\n  511          }\n  512  \n\n/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.h:\n   24  \n   25      ngx_int_t                        current_weight;\n   26:     ngx_int_t                        effective_weight;\n   27      ngx_int_t                        weight;\n   28  \n\n/home/ytl/ant/src/ngx_openresty/bundle/ngx_lua_upstream-0.06/src/ngx_http_lua_upstream_module.c:\n  443      lua_rawset(L, -3);\n  444  \n  445:     lua_pushliteral(L, \"effective_weight\");\n  446:     lua_pushinteger(L, (lua_Integer) peer->effective_weight);\n  447      lua_rawset(L, -3);\n  448  \n\n/home/ytl/ant/src/ngx_openresty/bundle/ngx_lua_upstream-0.06/t/sanity.t:\n  228      GET /t\n  229  --- response_body_like chop\n  230: ^\\[\\{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"\\d{1,3}(?:\\.\\d{1,3}){3}:80\",\"weight\":1\\}(?:,\\{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":\\d+,\"max_fails\":1,\"name\":\"\\d{1,3}(?:\\.\\d{1,3}){3}:80\",\"weight\":1\\})+\\]$\n  231  \n  232  --- no_error_log\n  ...\n  268      GET /t\n  269  --- response_body\n  270: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":4,\"fail_timeout\":53,\"fails\":0,\"id\":0,\"max_fails\":100,\"name\":\"127.0.0.1:80\",\"weight\":4},{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":1,\"max_fails\":1,\"name\":\"106.184.1.99:81\",\"weight\":1}]\n  271: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.2:80\",\"weight\":1}]\n  272  --- no_error_log\n  273  [error]\n  ...\n  308      GET /t\n  309  --- response_body\n  310: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":5,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.6:80\",\"weight\":1}]\n  311: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.3:80\",\"weight\":1},{\"conns\":0,\"current_weight\":0,\"effective_weight\":7,\"fail_timeout\":23,\"fails\":0,\"id\":1,\"max_fails\":200,\"name\":\"127.0.0.4:80\",\"weight\":7}]\n  312  --- no_error_log\n  313  [error]\n  ...\n  345      GET /t\n  346  --- response_body\n  347: [{\"conns\":0,\"current_weight\":0,\"down\":true,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.2:80\",\"weight\":1}]\n  348  --- no_error_log\n  349  [error]\n  ...\n  417      GET /t\n  418  --- response_body\n  419: [{\"conns\":0,\"current_weight\":0,\"down\":true,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.3:80\",\"weight\":1},{\"conns\":0,\"current_weight\":0,\"effective_weight\":7,\"fail_timeout\":23,\"fails\":0,\"id\":1,\"max_fails\":200,\"name\":\"127.0.0.4:80\",\"weight\":7}]\n  420  --- no_error_log\n  421  [error]\n  ...\n  459      GET /t\n  460  --- response_body\n  461: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.3:80\",\"weight\":1},{\"conns\":0,\"current_weight\":0,\"effective_weight\":7,\"fail_timeout\":23,\"fails\":0,\"id\":1,\"max_fails\":200,\"name\":\"127.0.0.4:80\",\"weight\":7}]\n  462  --- no_error_log\n  463  [error]\n  ...\n  496      GET /t\n  497  --- response_body\n  498: [{\"conns\":0,\"current_weight\":0,\"effective_weight\":1,\"fail_timeout\":10,\"fails\":0,\"id\":0,\"max_fails\":1,\"name\":\"127.0.0.3:80\",\"weight\":1},{\"conns\":0,\"current_weight\":0,\"down\":true,\"effective_weight\":7,\"fail_timeout\":23,\"fails\":0,\"id\":1,\"max_fails\":200,\"name\":\"127.0.0.4:80\",\"weight\":7}]\n  499  --- no_error_log\n  500  [error]\n\n/home/ytl/ant/src/ngx_openresty/bundle/pod/ngx_lua_upstream-0.06/ngx_lua_upstream-0.06.pod:\n  152  =item *\n  153  \n  154: effective_weight\n  155  \n  156  =item *\n\n138 matches across 26 files\n",
					"settings":
					{
						"buffer_size": 31071,
						"line_ending": "Unix",
						"name": "Find Results",
						"scratch": true
					}
				},
				{
					"contents": "\n/*\n * Copyright (C) Igor Sysoev\n * Copyright (C) Nginx, Inc.\n */\n\n\n#include <ngx_config.h>\n#include <ngx_core.h>\n#include <ngx_stream.h>\n\n\n#define ngx_stream_upstream_tries(p) ((p)->number                             \\\n                                      + ((p)->next ? (p)->next->number : 0))\n\n\nstatic ngx_stream_upstream_rr_peer_t *ngx_stream_upstream_get_peer(\n    ngx_stream_upstream_rr_peer_data_t *rrp);\n\n#if (NGX_STREAM_SSL)\n\nstatic ngx_int_t ngx_stream_upstream_set_round_robin_peer_session(\n    ngx_peer_connection_t *pc, void *data);\nstatic void ngx_stream_upstream_save_round_robin_peer_session(\n    ngx_peer_connection_t *pc, void *data);\n\n#endif\n\n\nngx_int_t\nngx_stream_upstream_init_round_robin(ngx_conf_t *cf,\n    ngx_stream_upstream_srv_conf_t *us)\n{\n    ngx_url_t                        u;\n    ngx_uint_t                       i, j, n, w;\n    ngx_stream_upstream_server_t    *server;\n    ngx_stream_upstream_rr_peer_t   *peer, **peerp;\n    ngx_stream_upstream_rr_peers_t  *peers, *backup;\n\n    us->peer.init = ngx_stream_upstream_init_round_robin_peer;\n\n    if (us->servers) {\n        server = us->servers->elts;\n\n        n = 0;\n        w = 0;\n\n        for (i = 0; i < us->servers->nelts; i++) {\n            if (server[i].backup) {\n                continue;\n            }\n\n            n += server[i].naddrs;\n            w += server[i].naddrs * server[i].weight;\n        }\n\n        if (n == 0) {\n            ngx_log_error(NGX_LOG_EMERG, cf->log, 0,\n                          \"no servers in upstream \\\"%V\\\" in %s:%ui\",\n                          &us->host, us->file_name, us->line);\n            return NGX_ERROR;\n        }\n\n        peers = ngx_pcalloc(cf->pool, sizeof(ngx_stream_upstream_rr_peers_t));\n        if (peers == NULL) {\n            return NGX_ERROR;\n        }\n\n        peer = ngx_pcalloc(cf->pool, sizeof(ngx_stream_upstream_rr_peer_t) * n);\n        if (peer == NULL) {\n            return NGX_ERROR;\n        }\n\n        peers->single = (n == 1);\n        peers->number = n;\n        peers->weighted = (w != n);\n        peers->total_weight = w;\n        peers->name = &us->host;\n\n        n = 0;\n        peerp = &peers->peer;\n\n        for (i = 0; i < us->servers->nelts; i++) {\n            if (server[i].backup) {\n                continue;\n            }\n\n            for (j = 0; j < server[i].naddrs; j++) {\n                peer[n].sockaddr = server[i].addrs[j].sockaddr;\n                peer[n].socklen = server[i].addrs[j].socklen;\n                peer[n].name = server[i].addrs[j].name;\n                peer[n].weight = server[i].weight;\n                peer[n].effective_weight = server[i].weight;\n                peer[n].current_weight = 0;\n                peer[n].max_fails = server[i].max_fails;\n                peer[n].fail_timeout = server[i].fail_timeout;\n                peer[n].down = server[i].down;\n                peer[n].server = server[i].name;\n\n                *peerp = &peer[n];\n                peerp = &peer[n].next;\n                n++;\n            }\n        }\n\n        us->peer.data = peers;\n\n        /* backup servers */\n\n        n = 0;\n        w = 0;\n\n        for (i = 0; i < us->servers->nelts; i++) {\n            if (!server[i].backup) {\n                continue;\n            }\n\n            n += server[i].naddrs;\n            w += server[i].naddrs * server[i].weight;\n        }\n\n        if (n == 0) {\n            return NGX_OK;\n        }\n\n        backup = ngx_pcalloc(cf->pool, sizeof(ngx_stream_upstream_rr_peers_t));\n        if (backup == NULL) {\n            return NGX_ERROR;\n        }\n\n        peer = ngx_pcalloc(cf->pool, sizeof(ngx_stream_upstream_rr_peer_t) * n);\n        if (peer == NULL) {\n            return NGX_ERROR;\n        }\n\n        peers->single = 0;\n        backup->single = 0;\n        backup->number = n;\n        backup->weighted = (w != n);\n        backup->total_weight = w;\n        backup->name = &us->host;\n\n        n = 0;\n        peerp = &backup->peer;\n\n        for (i = 0; i < us->servers->nelts; i++) {\n            if (!server[i].backup) {\n                continue;\n            }\n\n            for (j = 0; j < server[i].naddrs; j++) {\n                peer[n].sockaddr = server[i].addrs[j].sockaddr;\n                peer[n].socklen = server[i].addrs[j].socklen;\n                peer[n].name = server[i].addrs[j].name;\n                peer[n].weight = server[i].weight;\n                peer[n].effective_weight = server[i].weight;\n                peer[n].current_weight = 0;\n                peer[n].max_fails = server[i].max_fails;\n                peer[n].fail_timeout = server[i].fail_timeout;\n                peer[n].down = server[i].down;\n                peer[n].server = server[i].name;\n\n                *peerp = &peer[n];\n                peerp = &peer[n].next;\n                n++;\n            }\n        }\n\n        peers->next = backup;\n\n        return NGX_OK;\n    }\n\n\n    /* an upstream implicitly defined by proxy_pass, etc. */\n\n    if (us->port == 0) {\n        ngx_log_error(NGX_LOG_EMERG, cf->log, 0,\n                      \"no port in upstream \\\"%V\\\" in %s:%ui\",\n                      &us->host, us->file_name, us->line);\n        return NGX_ERROR;\n    }\n\n    ngx_memzero(&u, sizeof(ngx_url_t));\n\n    u.host = us->host;\n    u.port = us->port;\n\n    if (ngx_inet_resolve_host(cf->pool, &u) != NGX_OK) {\n        if (u.err) {\n            ngx_log_error(NGX_LOG_EMERG, cf->log, 0,\n                          \"%s in upstream \\\"%V\\\" in %s:%ui\",\n                          u.err, &us->host, us->file_name, us->line);\n        }\n\n        return NGX_ERROR;\n    }\n\n    n = u.naddrs;\n\n    peers = ngx_pcalloc(cf->pool, sizeof(ngx_stream_upstream_rr_peers_t));\n    if (peers == NULL) {\n        return NGX_ERROR;\n    }\n\n    peer = ngx_pcalloc(cf->pool, sizeof(ngx_stream_upstream_rr_peer_t) * n);\n    if (peer == NULL) {\n        return NGX_ERROR;\n    }\n\n    peers->single = (n == 1);\n    peers->number = n;\n    peers->weighted = 0;\n    peers->total_weight = n;\n    peers->name = &us->host;\n\n    peerp = &peers->peer;\n\n    for (i = 0; i < u.naddrs; i++) {\n        peer[i].sockaddr = u.addrs[i].sockaddr;\n        peer[i].socklen = u.addrs[i].socklen;\n        peer[i].name = u.addrs[i].name;\n        peer[i].weight = 1;\n        peer[i].effective_weight = 1;\n        peer[i].current_weight = 0;\n        peer[i].max_fails = 1;\n        peer[i].fail_timeout = 10;\n        *peerp = &peer[i];\n        peerp = &peer[i].next;\n    }\n\n    us->peer.data = peers;\n\n    /* implicitly defined upstream has no backup servers */\n\n    return NGX_OK;\n}\n\n\nngx_int_t\nngx_stream_upstream_init_round_robin_peer(ngx_stream_session_t *s,\n    ngx_stream_upstream_srv_conf_t *us)\n{\n    ngx_uint_t                           n;\n    ngx_stream_upstream_rr_peer_data_t  *rrp;\n\n    rrp = s->upstream->peer.data;\n\n    if (rrp == NULL) {\n        rrp = ngx_palloc(s->connection->pool,\n                         sizeof(ngx_stream_upstream_rr_peer_data_t));\n        if (rrp == NULL) {\n            return NGX_ERROR;\n        }\n\n        s->upstream->peer.data = rrp;\n    }\n\n    rrp->peers = us->peer.data;\n    rrp->current = NULL;\n\n    n = rrp->peers->number;\n\n    if (rrp->peers->next && rrp->peers->next->number > n) {\n        n = rrp->peers->next->number;\n    }\n\n    if (n <= 8 * sizeof(uintptr_t)) {\n        rrp->tried = &rrp->data;\n        rrp->data = 0;\n\n    } else {\n        n = (n + (8 * sizeof(uintptr_t) - 1)) / (8 * sizeof(uintptr_t));\n\n        rrp->tried = ngx_pcalloc(s->connection->pool, n * sizeof(uintptr_t));\n        if (rrp->tried == NULL) {\n            return NGX_ERROR;\n        }\n    }\n\n    s->upstream->peer.get = ngx_stream_upstream_get_round_robin_peer;\n    s->upstream->peer.free = ngx_stream_upstream_free_round_robin_peer;\n    s->upstream->peer.tries = ngx_stream_upstream_tries(rrp->peers);\n#if (NGX_STREAM_SSL)\n    s->upstream->peer.set_session =\n                             ngx_stream_upstream_set_round_robin_peer_session;\n    s->upstream->peer.save_session =\n                             ngx_stream_upstream_save_round_robin_peer_session;\n#endif\n\n    return NGX_OK;\n}\n\n\nngx_int_t\nngx_stream_upstream_get_round_robin_peer(ngx_peer_connection_t *pc, void *data)\n{\n    ngx_stream_upstream_rr_peer_data_t *rrp = data;\n\n    ngx_int_t                        rc;\n    ngx_uint_t                       i, n;\n    ngx_stream_upstream_rr_peer_t   *peer;\n    ngx_stream_upstream_rr_peers_t  *peers;\n\n    ngx_log_debug1(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                   \"get rr peer, try: %ui\", pc->tries);\n\n    pc->connection = NULL;\n\n    peers = rrp->peers;\n    ngx_stream_upstream_rr_peers_wlock(peers);\n\n    if (peers->single) {\n        peer = peers->peer;\n\n        if (peer->down) {\n            goto failed;\n        }\n\n        rrp->current = peer;\n\n    } else {\n\n        /* there are several peers */\n\n        peer = ngx_stream_upstream_get_peer(rrp);\n\n        if (peer == NULL) {\n            goto failed;\n        }\n\n        ngx_log_debug2(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                       \"get rr peer, current: %p %i\",\n                       peer, peer->current_weight);\n    }\n\n    pc->sockaddr = peer->sockaddr;\n    pc->socklen = peer->socklen;\n    pc->name = &peer->name;\n\n    peer->conns++;\n\n    ngx_stream_upstream_rr_peers_unlock(peers);\n\n    return NGX_OK;\n\nfailed:\n\n    if (peers->next) {\n\n        ngx_log_debug0(NGX_LOG_DEBUG_STREAM, pc->log, 0, \"backup servers\");\n\n        rrp->peers = peers->next;\n\n        n = (rrp->peers->number + (8 * sizeof(uintptr_t) - 1))\n                / (8 * sizeof(uintptr_t));\n\n        for (i = 0; i < n; i++) {\n            rrp->tried[i] = 0;\n        }\n\n        ngx_stream_upstream_rr_peers_unlock(peers);\n\n        rc = ngx_stream_upstream_get_round_robin_peer(pc, rrp);\n\n        if (rc != NGX_BUSY) {\n            return rc;\n        }\n\n        ngx_stream_upstream_rr_peers_wlock(peers);\n    }\n\n    /* all peers failed, mark them as live for quick recovery */\n\n    for (peer = peers->peer; peer; peer = peer->next) {\n        peer->fails = 0;\n    }\n\n    ngx_stream_upstream_rr_peers_unlock(peers);\n\n    pc->name = peers->name;\n\n    return NGX_BUSY;\n}\n\n\nstatic ngx_stream_upstream_rr_peer_t *\nngx_stream_upstream_get_peer(ngx_stream_upstream_rr_peer_data_t *rrp)\n{\n    time_t                          now;\n    uintptr_t                       m;\n    ngx_int_t                       total;\n    ngx_uint_t                      i, n, p;\n    ngx_stream_upstream_rr_peer_t  *peer, *best;\n\n    now = ngx_time();\n\n    best = NULL;\n    total = 0;\n\n#if (NGX_SUPPRESS_WARN)\n    p = 0;\n#endif\n\n    for (peer = rrp->peers->peer, i = 0;\n         peer;\n         peer = peer->next, i++)\n    {\n\n        n = i / (8 * sizeof(uintptr_t));\n        m = (uintptr_t) 1 << i % (8 * sizeof(uintptr_t));\n\n        if (rrp->tried[n] & m) {\n            continue;\n        }\n\n        if (peer->down) {\n            continue;\n        }\n\n        if (peer->max_fails\n            && peer->fails >= peer->max_fails\n            && now - peer->checked <= peer->fail_timeout)\n        {\n            continue;\n        }\n\n        peer->current_weight += peer->effective_weight;\n        total += peer->effective_weight;\n\n        if (peer->effective_weight < peer->weight) {\n            peer->effective_weight++;\n        }\n\n        if (best == NULL || peer->current_weight > best->current_weight) {\n            best = peer;\n            p = i;\n        }\n    }\n\n    if (best == NULL) {\n        return NULL;\n    }\n\n    rrp->current = best;\n\n    n = p / (8 * sizeof(uintptr_t));\n    m = (uintptr_t) 1 << p % (8 * sizeof(uintptr_t));\n\n    rrp->tried[n] |= m;\n\n    best->current_weight -= total;\n\n    if (now - best->checked > best->fail_timeout) {\n        best->checked = now;\n    }\n\n    return best;\n}\n\n\nvoid\nngx_stream_upstream_free_round_robin_peer(ngx_peer_connection_t *pc, void *data,\n    ngx_uint_t state)\n{\n    ngx_stream_upstream_rr_peer_data_t  *rrp = data;\n\n    time_t                          now;\n    ngx_stream_upstream_rr_peer_t  *peer;\n\n    ngx_log_debug2(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                   \"free rr peer %ui %ui\", pc->tries, state);\n\n    peer = rrp->current;\n\n    ngx_stream_upstream_rr_peers_rlock(rrp->peers);\n    ngx_stream_upstream_rr_peer_lock(rrp->peers, peer);\n\n    if (rrp->peers->single) {\n        peer->conns--;\n\n        ngx_stream_upstream_rr_peer_unlock(rrp->peers, peer);\n        ngx_stream_upstream_rr_peers_unlock(rrp->peers);\n\n        pc->tries = 0;\n        return;\n    }\n\n    if (state & NGX_PEER_FAILED) {\n        now = ngx_time();\n\n        peer->fails++;\n        peer->accessed = now;\n        peer->checked = now;\n\n        if (peer->max_fails) {\n            peer->effective_weight -= peer->weight / peer->max_fails;\n\n            if (peer->fails >= peer->max_fails) {\n                ngx_log_error(NGX_LOG_WARN, pc->log, 0,\n                              \"upstream server temporarily disabled\");\n            }\n        }\n\n        ngx_log_debug2(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                       \"free rr peer failed: %p %i\",\n                       peer, peer->effective_weight);\n\n        if (peer->effective_weight < 0) {\n            peer->effective_weight = 0;\n        }\n\n    } else {\n\n        /* mark peer live if check passed */\n\n        if (peer->accessed < peer->checked) {\n            peer->fails = 0;\n        }\n    }\n\n    peer->conns--;\n\n    ngx_stream_upstream_rr_peer_unlock(rrp->peers, peer);\n    ngx_stream_upstream_rr_peers_unlock(rrp->peers);\n\n    if (pc->tries) {\n        pc->tries--;\n    }\n}\n\n\n#if (NGX_STREAM_SSL)\n\nstatic ngx_int_t\nngx_stream_upstream_set_round_robin_peer_session(ngx_peer_connection_t *pc,\n    void *data)\n{\n    ngx_stream_upstream_rr_peer_data_t  *rrp = data;\n\n    ngx_int_t                        rc;\n    ngx_ssl_session_t               *ssl_session;\n    ngx_stream_upstream_rr_peer_t   *peer;\n#if (NGX_STREAM_UPSTREAM_ZONE)\n    int                              len;\n#if OPENSSL_VERSION_NUMBER >= 0x0090707fL\n    const\n#endif\n    u_char                          *p;\n    ngx_stream_upstream_rr_peers_t  *peers;\n    u_char                           buf[NGX_SSL_MAX_SESSION_SIZE];\n#endif\n\n    peer = rrp->current;\n\n#if (NGX_STREAM_UPSTREAM_ZONE)\n    peers = rrp->peers;\n\n    if (peers->shpool) {\n        ngx_stream_upstream_rr_peers_rlock(peers);\n        ngx_stream_upstream_rr_peer_lock(peers, peer);\n\n        if (peer->ssl_session == NULL) {\n            ngx_stream_upstream_rr_peer_unlock(peers, peer);\n            ngx_stream_upstream_rr_peers_unlock(peers);\n            return NGX_OK;\n        }\n\n        len = peer->ssl_session_len;\n\n        ngx_memcpy(buf, peer->ssl_session, len);\n\n        ngx_stream_upstream_rr_peer_unlock(peers, peer);\n        ngx_stream_upstream_rr_peers_unlock(peers);\n\n        p = buf;\n        ssl_session = d2i_SSL_SESSION(NULL, &p, len);\n\n        rc = ngx_ssl_set_session(pc->connection, ssl_session);\n\n        ngx_log_debug1(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                       \"set session: %p\", ssl_session);\n\n        ngx_ssl_free_session(ssl_session);\n\n        return rc;\n    }\n#endif\n\n    ssl_session = peer->ssl_session;\n\n    rc = ngx_ssl_set_session(pc->connection, ssl_session);\n\n    ngx_log_debug1(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                   \"set session: %p\", ssl_session);\n\n    return rc;\n}\n\n\nstatic void\nngx_stream_upstream_save_round_robin_peer_session(ngx_peer_connection_t *pc,\n    void *data)\n{\n    ngx_stream_upstream_rr_peer_data_t  *rrp = data;\n\n    ngx_ssl_session_t               *old_ssl_session, *ssl_session;\n    ngx_stream_upstream_rr_peer_t   *peer;\n#if (NGX_STREAM_UPSTREAM_ZONE)\n    int                              len;\n    u_char                          *p;\n    ngx_stream_upstream_rr_peers_t  *peers;\n    u_char                           buf[NGX_SSL_MAX_SESSION_SIZE];\n#endif\n\n#if (NGX_STREAM_UPSTREAM_ZONE)\n    peers = rrp->peers;\n\n    if (peers->shpool) {\n\n        ssl_session = SSL_get0_session(pc->connection->ssl->connection);\n\n        if (ssl_session == NULL) {\n            return;\n        }\n\n        ngx_log_debug1(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                       \"save session: %p\", ssl_session);\n\n        len = i2d_SSL_SESSION(ssl_session, NULL);\n\n        /* do not cache too big session */\n\n        if (len > NGX_SSL_MAX_SESSION_SIZE) {\n            return;\n        }\n\n        p = buf;\n        (void) i2d_SSL_SESSION(ssl_session, &p);\n\n        peer = rrp->current;\n\n        ngx_stream_upstream_rr_peers_rlock(peers);\n        ngx_stream_upstream_rr_peer_lock(peers, peer);\n\n        if (len > peer->ssl_session_len) {\n            ngx_shmtx_lock(&peers->shpool->mutex);\n\n            if (peer->ssl_session) {\n                ngx_slab_free_locked(peers->shpool, peer->ssl_session);\n            }\n\n            peer->ssl_session = ngx_slab_alloc_locked(peers->shpool, len);\n\n            ngx_shmtx_unlock(&peers->shpool->mutex);\n\n            if (peer->ssl_session == NULL) {\n                peer->ssl_session_len = 0;\n\n                ngx_stream_upstream_rr_peer_unlock(peers, peer);\n                ngx_stream_upstream_rr_peers_unlock(peers);\n                return;\n            }\n\n            peer->ssl_session_len = len;\n        }\n\n        ngx_memcpy(peer->ssl_session, buf, len);\n\n        ngx_stream_upstream_rr_peer_unlock(peers, peer);\n        ngx_stream_upstream_rr_peers_unlock(peers);\n\n        return;\n    }\n#endif\n\n    ssl_session = ngx_ssl_get_session(pc->connection);\n\n    if (ssl_session == NULL) {\n        return;\n    }\n\n    ngx_log_debug1(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                   \"save session: %p\", ssl_session);\n\n    peer = rrp->current;\n\n    old_ssl_session = peer->ssl_session;\n    peer->ssl_session = ssl_session;\n\n    if (old_ssl_session) {\n\n        ngx_log_debug1(NGX_LOG_DEBUG_STREAM, pc->log, 0,\n                       \"old session: %p\", old_ssl_session);\n\n        /* TODO: may block */\n\n        ngx_ssl_free_session(old_ssl_session);\n    }\n}\n\n#endif\n",
					"file": "/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.c",
					"file_size": 17797,
					"file_write_time": 131249467909127459,
					"settings":
					{
						"buffer_size": 17797,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c",
					"settings":
					{
						"buffer_size": 21109,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 76.0,
				"last_filter": "pci",
				"selected_items":
				[
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pcl",
						"Package Control: List Packages"
					],
					[
						"Package Control: l",
						"Package Control: List Packages"
					],
					[
						"Package Control: i",
						"Package Control: Install Package"
					]
				],
				"width": 471.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/home/ytl/ant"
			],
			"file_history":
			[
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.h",
				"/home/ytl/Desktop/plan.md",
				"/home/ytl/Desktop/dynamic_upstream.lua",
				"/home/ytl/Desktop/Source Insight 3.lnk",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_resolver.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/core/ngx_resolver.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_upstream.c",
				"/home/ytl/lua/test.lua",
				"/tmp/diff",
				"/home/ytl/.config/sublime-text-3/Packages/ConvertToUTF8/ConvertToUTF8.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/ConvertToUTF8.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/CTags.sublime-settings",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_core_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_parse.c",
				"/home/ytl/Desktop/WeChat.lnk",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/os/win32/ngx_win32_config.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_conf_file.c",
				"/home/ytl/ant/src/ngx_cache_enhanced/ngx_http_cache_enhanced_module.c",
				"/home/ytl/Desktop/notebook",
				"/home/ytl/.wine/system.reg",
				"/home/ytl/.wine/drive_c/windows/win.ini",
				"/home/ytl/Desktop/ftp",
				"/home/ytl/ant/src/ngx_cache_enhanced/ngx_http_cache_purge_module.c",
				"/data/webroot/m3u8/r0021jrku7o.320086.ts.m3u8",
				"/home/ytl/Desktop/1.c",
				"/home/ytl/Desktop/test.c",
				"/home/ytl/Desktop/t",
				"/opt/platforms/lualib/ant/request.lua",
				"/home/ytl/Desktop/struct ngx_http_request_t.c",
				"/home/ytl/1",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_request.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_request.h",
				"/home/ytl/ant/src/ngx_mp4_seek/ngx_http_mp4_seek_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_write_filter_module.c",
				"/opt/platforms/lualib/ant/frame.lua",
				"/home/ytl/his",
				"/home/ytl/ant/demo/platforms/lualib/ant/frame.lua",
				"/home/ytl/ant/src/ngx_traffic_log_module/ngx_http_traffic_log_filter_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_variables.h",
				"/home/ytl/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
				"/data/webroot/sdmb.ts",
				"/data/webroot/sdmb.mp4",
				"/data/webroot/sdmb.",
				"/home/ytl/ant/demo/config.lua",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_core_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_conf_file.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_variables.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/os/unix/ngx_process_cycle.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/os/unix/ngx_process.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_string.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_core.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/LuaJIT-2.1-20160517/src/lj_def.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_config.h",
				"/home/ytl/ngx_http_mp4_seek_module.c",
				"/home/ytl/config.lua",
				"/home/ytl/ant/src/ngx_openresty/build/ngx_lua-0.10.6/t/073-backtrace.t",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_log.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_request_body.c.orig",
				"/home/ytl/ant/demo/platforms/lualib/plugin/demo/access.lua",
				"/opt/platforms/hsm/conf/hsm.conf",
				"/opt/platforms/hsm/conf/admin.conf",
				"/home/ytl/platforms/lualib/ant/redis.lua",
				"/home/ytl/Desktop/tc_access.lua",
				"/home/ytl/Downloads/RedisLive/src/www/index.html",
				"/home/ytl/platforms/mgtv_platform/hsm/conf/admin.conf",
				"/home/ytl/platforms/mgtv_platform/sp_lua/mgtv/access_videost.lua",
				"/home/ytl/Desktop/test.lua",
				"/home/ytl/Desktop/临时/notebook",
				"/home/ytl/Desktop/文档/plan.md",
				"/home/ytl/ant/demo/platforms2/config.lua",
				"/home/ytl/cdn_platforms/default_platform/comm/header_clear.conf",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/mgtv/access_videost.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/mgtv/access_downst.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/yunduan/access_downst.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/yunduan/access_videost.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/yunduan/access_downst.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/yunduan/access_videost.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/mgtv/access_downst.lua",
				"/home/ytl/platforms/lualib/ant/request.lua",
				"/home/ytl/platforms/comm_platform/sp/templates/hsm_channel.conf.j2",
				"/home/ytl/platforms/mgtv_platform/sp/templates/hsm_channel.conf.j2",
				"/home/ytl/platforms/lualib/ant/admin.lua",
				"/home/ytl/platforms/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/platforms/comm_platform/hsm/conf/admin.conf",
				"/home/ytl/main.c",
				"/home/ytl/test_ant.sh",
				"/home/ytl/ant/demo/platforms2/hsm/conf/hsm.conf",
				"/home/ytl/ant/demo/platforms2/sp/redis_cache/hsm_redis_cache.conf",
				"/home/ytl/ant/demo/platforms/default_platform/lbf/conf/header_filter.lua",
				"/home/ytl/ant/demo/platforms/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/ant/demo/platforms2/sp_lua/demo_sp/access.lua",
				"/home/ytl/ant/demo/platforms2/sp/demo_sp/hsm_demo.conf",
				"/home/ytl/ant/demo/platforms2/pg/conf/pg.conf",
				"/home/ytl/ant/demo/platforms2/sp/demo_sp/pg_demo.conf",
				"/home/ytl/ant/demo/platforms/demo_platform/hsm/conf/hsm.conf",
				"/home/ytl/ant/demo/platforms2/default_platform/env/env.json",
				"/home/ytl/ant/demo/platforms2/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/ant/demo/platforms2/demo_platform/env/env.json",
				"/home/ytl/ant/demo/platforms2/hsm/conf/admin.conf",
				"/home/ytl/ant/demo/platforms2/demo_platform/env/auth.conf",
				"/home/ytl/ant/demo/platforms/default_platform/env/env.json",
				"/home/ytl/ant/demo/platforms/demo_platform/env/env.json",
				"/home/ytl/Downloads/zh.reg",
				"/home/ytl/sublime-imfix.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/Desktop/临时/现网日志.xlsx",
				"/home/ytl/Desktop/临时/4杨廷龙.JPG",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_proxy_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event_pipe.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_connection.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c.orig",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event_pipe.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/resty.index",
				"/home/ytl/ant/src/ngx_openresty/build/pod/nginx/ngx_http_mp4_module.pod",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_proxy_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/event/ngx_event_pipe.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/nginx/src/core/ngx_parse.c",
				"/home/ytl/nginx/src/core/ngx_conf_file.c",
				"/home/ytl/nginx/src/http/ngx_http_core_module.c",
				"/home/ytl/nginx/src/http/ngx_http_core_module.h",
				"/home/ytl/nginx/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/nginx/src/http/ngx_http_upstream.h"
			],
			"find":
			{
				"height": 37.0
			},
			"find_in_files":
			{
				"height": 95.0,
				"where_history":
				[
					"",
					"<open folders>,/home/ytl/ant",
					"<open folders>"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"backup",
					"checked",
					"effective_weight",
					"ngx_http_upstream_get_round_robin_peer",
					"round-robin",
					"smooth",
					"ngx_resolver_lookup_addr",
					"weight",
					"WEIGHT",
					"weight",
					"WEIGHT",
					"weight",
					"\"upstream\"",
					"upstream",
					"add_timer",
					"product",
					"maxFails",
					"arg_start",
					"start",
					"expire",
					"limitafter",
					"limitrate",
					"limit_rate",
					"Tahoma",
					"purge_time",
					"ngx_http_cache_purge_record_walk",
					"要求",
					"ngx_http_finalize_request",
					"ngx_http_post_request",
					"ngx_http_postpone_filter_add",
					"ngx_http_subrequest",
					"ngx_http_postponed_request_t",
					"limit_rate_after",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_arg_discard",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_process_finish",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_mp4_seek_range_size",
					"ngx_http_mp4_seek_del_header",
					"ngx_http_mp4_seek_subrequest_send",
					"getSessionID",
					"getBakConfig",
					"updateConfig",
					"NGX_HTTP_MP4_SEEK_STATE_INIT",
					"ngx_http_core_main_conf_t",
					"ngx_http_mp4_seek_init",
					"ngx_http_mp4_seek_read_trak_atom",
					"ngx_http_mp4_seek_read_atom",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_subrequest_send",
					"ctx->range",
					"ngx_http_variable_mp4_range",
					"ctx->range",
					"mp4_range",
					"ant_mp4_seek",
					"key",
					"mp4",
					"ngx_http_mp4_seek_header_filter",
					"args",
					"ctx->args",
					"}\n",
					"ngx_http_mp4_seek_subrequest_send",
					"mlcf->start",
					"mlcf",
					"mp4_value",
					"mp4_end",
					"mp4_start",
					"ant_mp4_seek",
					"ngx_http_mp4_seek_merge_conf",
					"ngx_http_mp4_seek_create_conf",
					"NGX_CONF_UNSET_SIZE",
					"ngx_http_mp4_seek_create_conf",
					"ngx_http_mp4_seek_conf_t",
					"ant_mp4_seek",
					"    }",
					"ant_mp4_seek",
					"ngx_spawn_process",
					"ngx_start_worker_processes",
					"ngx_worker_process_cycle",
					"ngx_http_variable_t",
					"ngx_http_mp4_seek_vars",
					"ngx_worker_process_cycle",
					"ngx_cache_purge_process_handler",
					"circle",
					"ngx_http_variable_value_t",
					"ngx_http_mp4_seek_get_var",
					"ant_mp4_seek",
					"ngx_http_mp4_seek_get_var",
					"ngx_http_mp4_seek_vars",
					"ngx_http_mp4_seek_get_var",
					"start",
					"ngx_http_mp4_seek_conf_t",
					"mlcf",
					"state",
					"NGX_HTTP_MP4_SEEK_STATE_INIT",
					"state",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_log_error",
					"proxy_mp4_seek",
					"start",
					"ngx_sprintf",
					"printf",
					"ngx_str_print",
					"ngx_str_printf",
					"ngx_printf",
					"proxy_mp4_seek",
					"ngx_log_error",
					"ngx_log",
					"ant_mp4_seek",
					"handleCacheKey",
					"confTbale",
					"channel",
					"8888",
					"***\n",
					"end",
					"header_filter_lua",
					"ngx_http_proxy_merge_loc_conf",
					"ngx_http_proxy_create_loc_conf",
					"ngx_http_proxy_create_main_conf",
					"ngx_http_proxy_vars",
					"ngx_http_proxy_add_variables",
					"ngx_http_proxy_vars",
					"ngx_http_proxy_add_variables"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/home/ytl/ant"
				}
			],
			"groups":
			[
				{
					"selected": 2,
					"sheets":
					[
						{
							"buffer": 0,
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 31071,
								"regions":
								{
									"match":
									{
										"flags": 112,
										"regions":
										[
											[
												520,
												558
											],
											[
												640,
												678
											],
											[
												1515,
												1553
											],
											[
												1635,
												1673
											],
											[
												2514,
												2552
											],
											[
												2633,
												2671
											],
											[
												2725,
												2763
											],
											[
												2845,
												2883
											],
											[
												3471,
												3509
											],
											[
												3724,
												3762
											],
											[
												3953,
												3991
											],
											[
												4189,
												4227
											],
											[
												4522,
												4560
											],
											[
												4874,
												4912
											],
											[
												5140,
												5178
											],
											[
												5389,
												5427
											],
											[
												5581,
												5619
											],
											[
												5803,
												5841
											],
											[
												6056,
												6094
											],
											[
												6285,
												6323
											],
											[
												6521,
												6559
											],
											[
												6855,
												6893
											],
											[
												7208,
												7246
											],
											[
												7475,
												7513
											],
											[
												7725,
												7763
											],
											[
												7918,
												7956
											],
											[
												8353,
												8369
											],
											[
												8487,
												8503
											],
											[
												8554,
												8570
											],
											[
												8693,
												8709
											],
											[
												9381,
												9397
											],
											[
												9515,
												9531
											],
											[
												10343,
												10359
											],
											[
												10482,
												10498
											],
											[
												11211,
												11227
											],
											[
												11344,
												11360
											],
											[
												11411,
												11427
											],
											[
												11549,
												11565
											],
											[
												11618,
												11634
											],
											[
												11752,
												11768
											],
											[
												11819,
												11835
											],
											[
												11958,
												11974
											],
											[
												12553,
												12569
											],
											[
												12863,
												12879
											],
											[
												13126,
												13142
											],
											[
												13333,
												13349
											],
											[
												13550,
												13566
											],
											[
												13737,
												13753
											],
											[
												13785,
												13801
											],
											[
												13836,
												13852
											],
											[
												13896,
												13912
											],
											[
												14018,
												14034
											],
											[
												14305,
												14321
											],
											[
												14357,
												14373
											],
											[
												14406,
												14422
											],
											[
												14657,
												14673
											],
											[
												14914,
												14930
											],
											[
												14966,
												14982
											],
											[
												15021,
												15037
											],
											[
												15085,
												15101
											],
											[
												15320,
												15336
											],
											[
												15372,
												15388
											],
											[
												15427,
												15443
											],
											[
												15491,
												15507
											],
											[
												15716,
												15732
											],
											[
												15768,
												15784
											],
											[
												15823,
												15839
											],
											[
												15887,
												15903
											],
											[
												16118,
												16134
											],
											[
												16170,
												16186
											],
											[
												16225,
												16241
											],
											[
												16289,
												16305
											],
											[
												16588,
												16604
											],
											[
												16898,
												16914
											],
											[
												17161,
												17177
											],
											[
												17340,
												17356
											],
											[
												17388,
												17404
											],
											[
												17439,
												17455
											],
											[
												17499,
												17515
											],
											[
												17621,
												17637
											],
											[
												17910,
												17926
											],
											[
												17962,
												17978
											],
											[
												18011,
												18027
											],
											[
												18268,
												18284
											],
											[
												18512,
												18528
											],
											[
												18582,
												18598
											],
											[
												18807,
												18823
											],
											[
												18960,
												18976
											],
											[
												19205,
												19221
											],
											[
												19341,
												19357
											],
											[
												19487,
												19503
											],
											[
												19718,
												19734
											],
											[
												19860,
												19876
											],
											[
												19994,
												20010
											],
											[
												20239,
												20255
											],
											[
												20482,
												20498
											],
											[
												20616,
												20632
											],
											[
												20849,
												20865
											],
											[
												20983,
												20999
											],
											[
												21216,
												21232
											],
											[
												21362,
												21378
											],
											[
												21629,
												21645
											],
											[
												21916,
												21932
											],
											[
												22226,
												22242
											],
											[
												22489,
												22505
											],
											[
												22696,
												22712
											],
											[
												22913,
												22929
											],
											[
												23100,
												23116
											],
											[
												23148,
												23164
											],
											[
												23199,
												23215
											],
											[
												23259,
												23275
											],
											[
												23381,
												23397
											],
											[
												23668,
												23684
											],
											[
												23720,
												23736
											],
											[
												23769,
												23785
											],
											[
												24021,
												24037
											],
											[
												24279,
												24295
											],
											[
												24331,
												24347
											],
											[
												24386,
												24402
											],
											[
												24450,
												24466
											],
											[
												24686,
												24702
											],
											[
												24738,
												24754
											],
											[
												24793,
												24809
											],
											[
												24857,
												24873
											],
											[
												25083,
												25099
											],
											[
												25135,
												25151
											],
											[
												25190,
												25206
											],
											[
												25254,
												25270
											],
											[
												25486,
												25502
											],
											[
												25538,
												25554
											],
											[
												25593,
												25609
											],
											[
												25657,
												25673
											],
											[
												25957,
												25973
											],
											[
												26267,
												26283
											],
											[
												26530,
												26546
											],
											[
												26709,
												26725
											],
											[
												26757,
												26773
											],
											[
												26808,
												26824
											],
											[
												26868,
												26884
											],
											[
												26990,
												27006
											],
											[
												27279,
												27295
											],
											[
												27331,
												27347
											],
											[
												27380,
												27396
											],
											[
												27638,
												27654
											],
											[
												27883,
												27899
											],
											[
												27953,
												27969
											],
											[
												28179,
												28195
											],
											[
												28332,
												28348
											],
											[
												28577,
												28593
											],
											[
												28713,
												28729
											],
											[
												28859,
												28875
											],
											[
												29090,
												29106
											],
											[
												29232,
												29248
											],
											[
												29366,
												29382
											],
											[
												29611,
												29627
											],
											[
												29854,
												29870
											],
											[
												29988,
												30004
											],
											[
												30221,
												30237
											],
											[
												30355,
												30371
											],
											[
												30588,
												30604
											],
											[
												30734,
												30750
											],
											[
												31002,
												31018
											]
										],
										"scope": ""
									}
								},
								"selection":
								[
									[
										16215,
										16215
									]
								],
								"settings":
								{
									"default_dir": "/home/ytl/ant",
									"detect_indentation": false,
									"line_numbers": false,
									"output_tag": 2,
									"result_base_dir": "",
									"result_file_regex": "^([^ \t].*):$",
									"result_line_regex": "^ +([0-9]+):",
									"scroll_past_end": true,
									"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
									"translate_tabs_to_spaces": false
								},
								"translation.x": 0.0,
								"translation.y": 6783.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_upstream_round_robin.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 17797,
								"regions":
								{
								},
								"selection":
								[
									[
										6457,
										6457
									]
								],
								"settings":
								{
									"origin_encoding": "ASCII",
									"syntax": "Packages/C++/C.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 4413.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream_round_robin.c",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 21109,
								"regions":
								{
								},
								"selection":
								[
									[
										3788,
										3788
									]
								],
								"settings":
								{
									"origin_encoding": "ASCII",
									"syntax": "Packages/C++/C.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": 0.0,
								"translation.y": 2342.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 27.0
			},
			"input":
			{
				"height": 37.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 126.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,1,0,0,0,291,24,935,504,3286,1080",
			"project": "",
			"replace":
			{
				"height": 50.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"673",
						"src/ngx_openresty/build/ngx_lua-0.10.6/t/073-backtrace.t"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 241.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 76,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"curr",
						"currPeer\t(uceBalancer.lua)"
					],
					[
						"NG",
						"NGX_OK"
					],
					[
						"mp4",
						"mp4_value"
					],
					[
						"ct",
						"ctx"
					],
					[
						"printf",
						"printf\tprintf …"
					]
				]
			},
			"buffers":
			[
				{
					"file": "/opt/platforms/lualib/plugin/demo/uceBalancer.lua",
					"settings":
					{
						"buffer_size": 543,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/opt/platforms/uce/conf/balancer.lua",
					"settings":
					{
						"buffer_size": 5934,
						"encoding": "UTF-8",
						"line_ending": "Unix"
					}
				},
				{
					"file": "/home/ytl/Desktop/notebook",
					"settings":
					{
						"buffer_size": 2946,
						"encoding": "UTF-8",
						"line_ending": "Windows"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 76.0,
				"last_filter": "pci",
				"selected_items":
				[
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pcl",
						"Package Control: List Packages"
					],
					[
						"Package Control: l",
						"Package Control: List Packages"
					],
					[
						"Package Control: i",
						"Package Control: Install Package"
					]
				],
				"width": 471.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"expanded_folders":
			[
				"/opt/platforms",
				"/opt/platforms/lualib/ant",
				"/opt/platforms/pg/conf",
				"/opt/platforms/uce",
				"/opt/platforms/uce/conf"
			],
			"file_history":
			[
				"/home/ytl/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/Package Control.user-ca-bundle",
				"/home/ytl/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
				"/home/ytl/platforms/default_platform/pg/lua/meitu_mvvideo11_filter.lua",
				"/home/ytl/platforms/comm_platform/sp_lua/meitu/mvvideo11_access.lua",
				"/home/ytl/platforms/default_platform/pg/lua/meitu_mvvideo10_filter.lua",
				"/home/ytl/platforms/comm_platform/sp_lua/meitu/mvvideo10_access.lua",
				"/opt/platforms/uce/conf/balancer.lua",
				"/opt/platforms/lualib/ant/frame.lua",
				"/opt/platforms/hsm/conf/hsm.conf",
				"/opt/platforms/hsm/conf/admin.conf",
				"/home/ytl/lua/test.lua",
				"/tmp/diff",
				"/home/ytl/.config/sublime-text-3/Packages/ConvertToUTF8/ConvertToUTF8.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/ConvertToUTF8.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/CTags.sublime-settings",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_core_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_parse.c",
				"/home/ytl/Desktop/WeChat.lnk",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/os/win32/ngx_win32_config.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_conf_file.c",
				"/home/ytl/ant/src/ngx_cache_enhanced/ngx_http_cache_enhanced_module.c",
				"/home/ytl/Desktop/notebook",
				"/home/ytl/.wine/system.reg",
				"/home/ytl/.wine/drive_c/windows/win.ini",
				"/home/ytl/Desktop/ftp",
				"/home/ytl/ant/src/ngx_cache_enhanced/ngx_http_cache_purge_module.c",
				"/data/webroot/m3u8/r0021jrku7o.320086.ts.m3u8",
				"/home/ytl/Desktop/1.c",
				"/home/ytl/Desktop/test.c",
				"/home/ytl/Desktop/t",
				"/opt/platforms/lualib/ant/request.lua",
				"/home/ytl/Desktop/struct ngx_http_request_t.c",
				"/home/ytl/1",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_request.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_request.h",
				"/home/ytl/ant/src/ngx_mp4_seek/ngx_http_mp4_seek_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_write_filter_module.c",
				"/home/ytl/his",
				"/home/ytl/ant/demo/platforms/lualib/ant/frame.lua",
				"/home/ytl/ant/src/ngx_traffic_log_module/ngx_http_traffic_log_filter_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_variables.h",
				"/data/webroot/sdmb.ts",
				"/data/webroot/sdmb.mp4",
				"/data/webroot/sdmb.",
				"/home/ytl/ant/demo/config.lua",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_core_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_conf_file.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_variables.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/os/unix/ngx_process_cycle.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/os/unix/ngx_process.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_string.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_core.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/LuaJIT-2.1-20160517/src/lj_def.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_config.h",
				"/home/ytl/ngx_http_mp4_seek_module.c",
				"/home/ytl/config.lua",
				"/home/ytl/ant/src/ngx_openresty/build/ngx_lua-0.10.6/t/073-backtrace.t",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_log.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_request_body.c.orig",
				"/home/ytl/ant/demo/platforms/lualib/plugin/demo/access.lua",
				"/home/ytl/Desktop/plan.md",
				"/home/ytl/platforms/lualib/ant/redis.lua",
				"/home/ytl/Desktop/tc_access.lua",
				"/home/ytl/Downloads/RedisLive/src/www/index.html",
				"/home/ytl/platforms/mgtv_platform/hsm/conf/admin.conf",
				"/home/ytl/platforms/mgtv_platform/sp_lua/mgtv/access_videost.lua",
				"/home/ytl/Desktop/test.lua",
				"/home/ytl/Desktop/临时/notebook",
				"/home/ytl/Desktop/文档/plan.md",
				"/home/ytl/ant/demo/platforms2/config.lua",
				"/home/ytl/cdn_platforms/default_platform/comm/header_clear.conf",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/mgtv/access_videost.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/mgtv/access_downst.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/yunduan/access_downst.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/yunduan/access_videost.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/yunduan/access_downst.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/yunduan/access_videost.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/mgtv/access_downst.lua",
				"/home/ytl/platforms/lualib/ant/request.lua",
				"/home/ytl/platforms/comm_platform/sp/templates/hsm_channel.conf.j2",
				"/home/ytl/platforms/mgtv_platform/sp/templates/hsm_channel.conf.j2",
				"/home/ytl/platforms/lualib/ant/admin.lua",
				"/home/ytl/platforms/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/platforms/comm_platform/hsm/conf/admin.conf",
				"/home/ytl/main.c",
				"/home/ytl/test_ant.sh",
				"/home/ytl/ant/demo/platforms2/hsm/conf/hsm.conf",
				"/home/ytl/ant/demo/platforms2/sp/redis_cache/hsm_redis_cache.conf",
				"/home/ytl/ant/demo/platforms/default_platform/lbf/conf/header_filter.lua",
				"/home/ytl/ant/demo/platforms/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/ant/demo/platforms2/sp_lua/demo_sp/access.lua",
				"/home/ytl/ant/demo/platforms2/sp/demo_sp/hsm_demo.conf",
				"/home/ytl/ant/demo/platforms2/pg/conf/pg.conf",
				"/home/ytl/ant/demo/platforms2/sp/demo_sp/pg_demo.conf",
				"/home/ytl/ant/demo/platforms/demo_platform/hsm/conf/hsm.conf",
				"/home/ytl/ant/demo/platforms2/default_platform/env/env.json",
				"/home/ytl/ant/demo/platforms2/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/ant/demo/platforms2/demo_platform/env/env.json",
				"/home/ytl/ant/demo/platforms2/hsm/conf/admin.conf",
				"/home/ytl/ant/demo/platforms2/demo_platform/env/auth.conf",
				"/home/ytl/ant/demo/platforms/default_platform/env/env.json",
				"/home/ytl/ant/demo/platforms/demo_platform/env/env.json",
				"/home/ytl/Downloads/zh.reg",
				"/home/ytl/sublime-imfix.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/Desktop/临时/现网日志.xlsx",
				"/home/ytl/Desktop/临时/4杨廷龙.JPG",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_proxy_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event_pipe.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_connection.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c.orig",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event_pipe.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/resty.index",
				"/home/ytl/ant/src/ngx_openresty/build/pod/nginx/ngx_http_mp4_module.pod",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_proxy_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/event/ngx_event_pipe.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/nginx/src/core/ngx_parse.c",
				"/home/ytl/nginx/src/core/ngx_conf_file.c",
				"/home/ytl/nginx/src/http/ngx_http_core_module.c",
				"/home/ytl/nginx/src/http/ngx_http_core_module.h",
				"/home/ytl/nginx/src/http/modules/ngx_http_proxy_module.c"
			],
			"find":
			{
				"height": 37.0
			},
			"find_in_files":
			{
				"height": 95.0,
				"where_history":
				[
					"",
					"<open folders>,/home/ytl/ant",
					"<open folders>"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"failTimeOut",
					"setCacheControl1",
					"currPeer",
					"roundWeightPolicy",
					"checkDown",
					"initHealthCheck",
					"expire",
					" down = false",
					", down = false",
					" failed = 0,",
					"add_timer",
					"product",
					"maxFails",
					"arg_start",
					"start",
					"expire",
					"limitafter",
					"limitrate",
					"limit_rate",
					"Tahoma",
					"purge_time",
					"ngx_http_cache_purge_record_walk",
					"要求",
					"ngx_http_finalize_request",
					"ngx_http_post_request",
					"ngx_http_postpone_filter_add",
					"ngx_http_subrequest",
					"ngx_http_postponed_request_t",
					"limit_rate_after",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_arg_discard",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_process_finish",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_mp4_seek_range_size",
					"ngx_http_mp4_seek_del_header",
					"ngx_http_mp4_seek_subrequest_send",
					"getSessionID",
					"getBakConfig",
					"updateConfig",
					"NGX_HTTP_MP4_SEEK_STATE_INIT",
					"ngx_http_core_main_conf_t",
					"ngx_http_mp4_seek_init",
					"ngx_http_mp4_seek_read_trak_atom",
					"ngx_http_mp4_seek_read_atom",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_subrequest_send",
					"ctx->range",
					"ngx_http_variable_mp4_range",
					"ctx->range",
					"mp4_range",
					"ant_mp4_seek",
					"key",
					"mp4",
					"ngx_http_mp4_seek_header_filter",
					"args",
					"ctx->args",
					"}\n",
					"ngx_http_mp4_seek_subrequest_send",
					"mlcf->start",
					"mlcf",
					"mp4_value",
					"mp4_end",
					"mp4_start",
					"ant_mp4_seek",
					"ngx_http_mp4_seek_merge_conf",
					"ngx_http_mp4_seek_create_conf",
					"NGX_CONF_UNSET_SIZE",
					"ngx_http_mp4_seek_create_conf",
					"ngx_http_mp4_seek_conf_t",
					"ant_mp4_seek",
					"    }",
					"ant_mp4_seek",
					"ngx_spawn_process",
					"ngx_start_worker_processes",
					"ngx_worker_process_cycle",
					"ngx_http_variable_t",
					"ngx_http_mp4_seek_vars",
					"ngx_worker_process_cycle",
					"ngx_cache_purge_process_handler",
					"circle",
					"ngx_http_variable_value_t",
					"ngx_http_mp4_seek_get_var",
					"ant_mp4_seek",
					"ngx_http_mp4_seek_get_var",
					"ngx_http_mp4_seek_vars",
					"ngx_http_mp4_seek_get_var",
					"start",
					"ngx_http_mp4_seek_conf_t",
					"mlcf",
					"state",
					"NGX_HTTP_MP4_SEEK_STATE_INIT",
					"state",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_log_error",
					"proxy_mp4_seek",
					"start",
					"ngx_sprintf",
					"printf",
					"ngx_str_print",
					"ngx_str_printf",
					"ngx_printf",
					"proxy_mp4_seek",
					"ngx_log_error",
					"ngx_log",
					"ant_mp4_seek",
					"handleCacheKey",
					"confTbale",
					"channel",
					"8888",
					"***\n",
					"end",
					"header_filter_lua",
					"ngx_http_proxy_merge_loc_conf",
					"ngx_http_proxy_create_loc_conf",
					"ngx_http_proxy_create_main_conf",
					"ngx_http_proxy_vars",
					"ngx_http_proxy_add_variables",
					"ngx_http_proxy_vars",
					"ngx_http_proxy_add_variables",
					"proxy_max_temp_file_size",
					"NGX_HTTP_UPSTREAM_IGN_XA_REDIRECT",
					"ngx_http_upstream_process_buffering",
					"ngx_http_upstream_process_limit_rate"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"folders":
			[
				{
					"path": "/opt/platforms"
				}
			],
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/opt/platforms/lualib/plugin/demo/uceBalancer.lua",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 543,
								"regions":
								{
								},
								"selection":
								[
									[
										132,
										132
									]
								],
								"settings":
								{
									"is_init_dirty_state": false,
									"origin_encoding": "ASCII",
									"syntax": "Packages/Lua/Lua.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						},
						{
							"buffer": 1,
							"file": "/opt/platforms/uce/conf/balancer.lua",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 5934,
								"regions":
								{
								},
								"selection":
								[
									[
										1176,
										1176
									]
								],
								"settings":
								{
									"origin_encoding": "ASCII",
									"syntax": "Packages/Lua/Lua.sublime-syntax",
									"tab_size": 4,
									"translate_tabs_to_spaces": true
								},
								"translation.x": -0.0,
								"translation.y": 285.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						},
						{
							"buffer": 2,
							"file": "/home/ytl/Desktop/notebook",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 2946,
								"regions":
								{
								},
								"selection":
								[
									[
										1581,
										1581
									]
								],
								"settings":
								{
									"syntax": "Packages/Text/Plain text.tmLanguage"
								},
								"translation.x": 0.0,
								"translation.y": 1064.0,
								"zoom_level": 1.0
							},
							"stack_index": 2,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 27.0
			},
			"input":
			{
				"height": 37.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					]
				],
				"cols":
				[
					0.0,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 126.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,1,0,0,0,0,0,0,0,3286,1080",
			"project": "",
			"replace":
			{
				"height": 50.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"673",
						"src/ngx_openresty/build/ngx_lua-0.10.6/t/073-backtrace.t"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 0,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": true,
			"side_bar_width": 221.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 75,
			"workspace_name": ""
		},
		{
			"auto_complete":
			{
				"selected_items":
				[
					[
						"curr",
						"currPeer\t(uceBalancer.lua)"
					],
					[
						"NG",
						"NGX_OK"
					],
					[
						"mp4",
						"mp4_value"
					],
					[
						"ct",
						"ctx"
					],
					[
						"printf",
						"printf\tprintf …"
					]
				]
			},
			"buffers":
			[
				{
					"contents": "[\n\t{ \"keys\": [\"ctrl+q\"], \"command\": \"exit\" },\n\n\t{ \"keys\": [\"ctrl+shift+n\"], \"command\": \"new_window\" },\n\t{ \"keys\": [\"ctrl+shift+w\"], \"command\": \"close_window\" },\n\t{ \"keys\": [\"ctrl+o\"], \"command\": \"prompt_open_file\" },\n\t{ \"keys\": [\"ctrl+shift+t\"], \"command\": \"reopen_last_file\" },\n\t{ \"keys\": [\"alt+o\"], \"command\": \"switch_file\", \"args\": {\"extensions\": [\"cpp\", \"cxx\", \"cc\", \"c\", \"hpp\", \"hxx\", \"hh\", \"h\", \"ipp\", \"inl\", \"m\", \"mm\"]} },\n\t{ \"keys\": [\"ctrl+n\"], \"command\": \"new_file\" },\n\t{ \"keys\": [\"ctrl+s\"], \"command\": \"save\" },\n\t{ \"keys\": [\"ctrl+shift+s\"], \"command\": \"prompt_save_as\" },\n\t{ \"keys\": [\"ctrl+f4\"], \"command\": \"close_file\" },\n\t{ \"keys\": [\"ctrl+w\"], \"command\": \"close\" },\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+b\"], \"command\": \"toggle_side_bar\" },\n\t{ \"keys\": [\"f11\"], \"command\": \"toggle_full_screen\" },\n\t{ \"keys\": [\"shift+f11\"], \"command\": \"toggle_distraction_free\" },\n\n\t{ \"keys\": [\"backspace\"], \"command\": \"left_delete\" },\n\t{ \"keys\": [\"shift+backspace\"], \"command\": \"left_delete\" },\n\t{ \"keys\": [\"ctrl+shift+backspace\"], \"command\": \"left_delete\" },\n\t{ \"keys\": [\"delete\"], \"command\": \"right_delete\" },\n\t{ \"keys\": [\"enter\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\n\"} },\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\n\"} },\n\t{ \"keys\": [\"keypad_enter\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\n\"} },\n\t{ \"keys\": [\"shift+keypad_enter\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\n\"} },\n\n\t{ \"keys\": [\"ctrl+z\"], \"command\": \"undo\" },\n\t{ \"keys\": [\"ctrl+shift+z\"], \"command\": \"redo\" },\n\t{ \"keys\": [\"ctrl+y\"], \"command\": \"redo_or_repeat\" },\n\t{ \"keys\": [\"ctrl+u\"], \"command\": \"soft_undo\" },\n\t{ \"keys\": [\"ctrl+shift+u\"], \"command\": \"soft_redo\" },\n\n\t{ \"keys\": [\"shift+delete\"], \"command\": \"cut\" },\n\t{ \"keys\": [\"ctrl+insert\"], \"command\": \"copy\" },\n\t{ \"keys\": [\"shift+insert\"], \"command\": \"paste\" },\n\n\t// These two key bindings should replace the above three if you'd prefer\n\t// the traditional X11 behavior of shift+insert pasting from the primary\n\t// selection. The above CUA keys are the default, to match most GTK\n\t// applications.\n\t//{ \"keys\": [\"shift+insert\"], \"command\": \"paste\", \"args\": {\"clipboard\": \"selection\"} },\n\t//{ \"keys\": [\"shift+delete\"], \"command\": \"right_delete\" },\n\n\t{ \"keys\": [\"ctrl+x\"], \"command\": \"cut\" },\n\t{ \"keys\": [\"ctrl+c\"], \"command\": \"copy\" },\n\t{ \"keys\": [\"ctrl+v\"], \"command\": \"paste\" },\n\t{ \"keys\": [\"ctrl+shift+v\"], \"command\": \"paste_and_indent\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+v\"], \"command\": \"paste_from_history\" },\n\n\t{ \"keys\": [\"left\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": false} },\n\t{ \"keys\": [\"right\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true} },\n\t{ \"keys\": [\"up\"], \"command\": \"move\", \"args\": {\"by\": \"lines\", \"forward\": false} },\n\t{ \"keys\": [\"down\"], \"command\": \"move\", \"args\": {\"by\": \"lines\", \"forward\": true} },\n\t{ \"keys\": [\"shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true, \"extend\": true} },\n\t{ \"keys\": [\"shift+up\"], \"command\": \"move\", \"args\": {\"by\": \"lines\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"shift+down\"], \"command\": \"move\", \"args\": {\"by\": \"lines\", \"forward\": true, \"extend\": true} },\n\n\t{ \"keys\": [\"ctrl+left\"], \"command\": \"move\", \"args\": {\"by\": \"words\", \"forward\": false} },\n\t{ \"keys\": [\"ctrl+right\"], \"command\": \"move\", \"args\": {\"by\": \"word_ends\", \"forward\": true} },\n\t{ \"keys\": [\"ctrl+shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"words\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"ctrl+shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"word_ends\", \"forward\": true, \"extend\": true} },\n\n\t{ \"keys\": [\"alt+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false} },\n\t{ \"keys\": [\"alt+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true} },\n\t{ \"keys\": [\"alt+shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"alt+shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true, \"extend\": true} },\n\n\t{ \"keys\": [\"alt+shift+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n\t{ \"keys\": [\"alt+shift+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} },\n\n\t{ \"keys\": [\"pageup\"], \"command\": \"move\", \"args\": {\"by\": \"pages\", \"forward\": false} },\n\t{ \"keys\": [\"pagedown\"], \"command\": \"move\", \"args\": {\"by\": \"pages\", \"forward\": true} },\n\t{ \"keys\": [\"shift+pageup\"], \"command\": \"move\", \"args\": {\"by\": \"pages\", \"forward\": false, \"extend\": true} },\n\t{ \"keys\": [\"shift+pagedown\"], \"command\": \"move\", \"args\": {\"by\": \"pages\", \"forward\": true, \"extend\": true} },\n\n\t{ \"keys\": [\"home\"], \"command\": \"move_to\", \"args\": {\"to\": \"bol\", \"extend\": false} },\n\t{ \"keys\": [\"end\"], \"command\": \"move_to\", \"args\": {\"to\": \"eol\", \"extend\": false} },\n\t{ \"keys\": [\"shift+home\"], \"command\": \"move_to\", \"args\": {\"to\": \"bol\", \"extend\": true} },\n\t{ \"keys\": [\"shift+end\"], \"command\": \"move_to\", \"args\": {\"to\": \"eol\", \"extend\": true} },\n\t{ \"keys\": [\"ctrl+home\"], \"command\": \"move_to\", \"args\": {\"to\": \"bof\", \"extend\": false} },\n\t{ \"keys\": [\"ctrl+end\"], \"command\": \"move_to\", \"args\": {\"to\": \"eof\", \"extend\": false} },\n\t{ \"keys\": [\"ctrl+shift+home\"], \"command\": \"move_to\", \"args\": {\"to\": \"bof\", \"extend\": true} },\n\t{ \"keys\": [\"ctrl+shift+end\"], \"command\": \"move_to\", \"args\": {\"to\": \"eof\", \"extend\": true} },\n\n\t{ \"keys\": [\"ctrl+up\"], \"command\": \"scroll_lines\", \"args\": {\"amount\": 1.0 } },\n\t{ \"keys\": [\"ctrl+down\"], \"command\": \"scroll_lines\", \"args\": {\"amount\": -1.0 } },\n\n\t{ \"keys\": [\"ctrl+pagedown\"], \"command\": \"next_view\" },\n\t{ \"keys\": [\"ctrl+pageup\"], \"command\": \"prev_view\" },\n\n\t{ \"keys\": [\"ctrl+tab\"], \"command\": \"next_view_in_stack\" },\n\t{ \"keys\": [\"ctrl+shift+tab\"], \"command\": \"prev_view_in_stack\" },\n\n\t{ \"keys\": [\"ctrl+a\"], \"command\": \"select_all\" },\n\t{ \"keys\": [\"ctrl+shift+l\"], \"command\": \"split_selection_into_lines\" },\n\t{ \"keys\": [\"escape\"], \"command\": \"single_selection\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"num_selections\", \"operator\": \"not_equal\", \"operand\": 1 }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"clear_fields\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"clear_fields\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"hide_panel\", \"args\": {\"cancel\": true},\n\t\t\"context\":\n\t\t[\n\t\t\t{ \"key\": \"panel_visible\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"hide_overlay\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"hide_popup\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"popup_visible\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"escape\"], \"command\": \"hide_auto_complete\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"tab\"], \"command\": \"insert_best_completion\", \"args\": {\"default\": \"\\t\", \"exact\": true} },\n\t{ \"keys\": [\"tab\"], \"command\": \"insert_best_completion\", \"args\": {\"default\": \"\\t\", \"exact\": false},\n\t\t\"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_match\", \"operand\": \".*\\\\b[0-9]+$\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"replace_completion_with_next_completion\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"last_command\", \"operator\": \"equal\", \"operand\": \"insert_best_completion\" },\n\t\t\t{ \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"reindent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"indent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"text\", \"operator\": \"regex_contains\", \"operand\": \"\\n\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"next_field\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"tab\"], \"command\": \"commit_completion\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"auto_complete_visible\" },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\" }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\t\"} },\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.shift_tab_unindent\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\t ]*\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"text\", \"operator\": \"regex_contains\", \"operand\": \"\\n\" }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+tab\"], \"command\": \"prev_field\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"ctrl+]\"], \"command\": \"indent\" },\n\t{ \"keys\": [\"ctrl+[\"], \"command\": \"unindent\" },\n\n\t{ \"keys\": [\"insert\"], \"command\": \"toggle_overwrite\" },\n\n\t{ \"keys\": [\"ctrl+l\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"line\"} },\n\t{ \"keys\": [\"ctrl+d\"], \"command\": \"find_under_expand\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+d\"], \"command\": \"find_under_expand_skip\" },\n\t{ \"keys\": [\"ctrl+shift+space\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"scope\"} },\n\t{ \"keys\": [\"ctrl+shift+m\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"brackets\"} },\n\t{ \"keys\": [\"ctrl+m\"], \"command\": \"move_to\", \"args\": {\"to\": \"brackets\"} },\n\t{ \"keys\": [\"ctrl+shift+j\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"indentation\"} },\n\t{ \"keys\": [\"ctrl+shift+a\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"tag\"} },\n\n\t{ \"keys\": [\"alt+.\"], \"command\": \"close_tag\" },\n\n\t{ \"keys\": [\"ctrl+alt+q\"], \"command\": \"toggle_record_macro\" },\n\t{ \"keys\": [\"ctrl+alt+shift+q\"], \"command\": \"run_macro\" },\n\n\t{ \"keys\": [\"ctrl+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Add Line.sublime-macro\"} },\n\t{ \"keys\": [\"ctrl+shift+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Add Line Before.sublime-macro\"} },\n\t{ \"keys\": [\"enter\"], \"command\": \"commit_completion\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"auto_complete_visible\" },\n\t\t\t{ \"key\": \"setting.auto_complete_commit_on_tab\", \"operand\": false }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"ctrl+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"show_files\": true} },\n\t{ \"keys\": [\"ctrl+shift+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\"} },\n\t{ \"keys\": [\"ctrl+alt+p\"], \"command\": \"prompt_select_workspace\" },\n\t{ \"keys\": [\"ctrl+r\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \"@\"} },\n\t{ \"keys\": [\"ctrl+g\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \":\"} },\n\t{ \"keys\": [\"ctrl+;\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \"#\"} },\n\t{ \"keys\": [\"f12\"], \"command\": \"goto_definition\" },\n\t{ \"keys\": [\"ctrl+shift+r\"], \"command\": \"goto_symbol_in_project\" },\n\t{ \"keys\": [\"alt+-\"], \"command\": \"jump_back\" },\n\t{ \"keys\": [\"alt+shift+-\"], \"command\": \"jump_forward\" },\n\t{ \"keys\": [\"alt+keypad_minus\"], \"command\": \"jump_back\" },\n\t{ \"keys\": [\"alt+shift+keypad_minus\"], \"command\": \"jump_forward\" },\n\n\t{ \"keys\": [\"ctrl+i\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"incremental_find\", \"reverse\": false} },\n\t{ \"keys\": [\"ctrl+shift+i\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"incremental_find\", \"reverse\": true} },\n\t{ \"keys\": [\"ctrl+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"find\", \"reverse\": false} },\n\t{ \"keys\": [\"ctrl+h\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"replace\", \"reverse\": false} },\n\t{ \"keys\": [\"ctrl+shift+h\"], \"command\": \"replace_next\" },\n\t{ \"keys\": [\"f3\"], \"command\": \"find_next\" },\n\t{ \"keys\": [\"shift+f3\"], \"command\": \"find_prev\" },\n\t{ \"keys\": [\"ctrl+f3\"], \"command\": \"find_under\" },\n\t{ \"keys\": [\"ctrl+shift+f3\"], \"command\": \"find_under_prev\" },\n\t{ \"keys\": [\"alt+f3\"], \"command\": \"find_all_under\" },\n\t{ \"keys\": [\"ctrl+e\"], \"command\": \"slurp_find_string\" },\n\t{ \"keys\": [\"ctrl+shift+e\"], \"command\": \"slurp_replace_string\" },\n\t{ \"keys\": [\"ctrl+shift+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"find_in_files\"} },\n\t{ \"keys\": [\"f4\"], \"command\": \"next_result\" },\n\t{ \"keys\": [\"shift+f4\"], \"command\": \"prev_result\" },\n\n\t{ \"keys\": [\"f6\"], \"command\": \"toggle_setting\", \"args\": {\"setting\": \"spell_check\"} },\n\t{ \"keys\": [\"ctrl+f6\"], \"command\": \"next_misspelling\" },\n\t{ \"keys\": [\"ctrl+shift+f6\"], \"command\": \"prev_misspelling\" },\n\n\t{ \"keys\": [\"ctrl+shift+up\"], \"command\": \"swap_line_up\" },\n\t{ \"keys\": [\"ctrl+shift+down\"], \"command\": \"swap_line_down\" },\n\n\t{ \"keys\": [\"ctrl+backspace\"], \"command\": \"delete_word\", \"args\": { \"forward\": false } },\n\t{ \"keys\": [\"ctrl+shift+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete to Hard BOL.sublime-macro\"} },\n\n\t{ \"keys\": [\"ctrl+delete\"], \"command\": \"delete_word\", \"args\": { \"forward\": true } },\n\t{ \"keys\": [\"ctrl+shift+delete\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n\n\t{ \"keys\": [\"ctrl+/\"], \"command\": \"toggle_comment\", \"args\": { \"block\": false } },\n\t{ \"keys\": [\"ctrl+shift+/\"], \"command\": \"toggle_comment\", \"args\": { \"block\": true } },\n\n\t{ \"keys\": [\"ctrl+j\"], \"command\": \"join_lines\" },\n\t{ \"keys\": [\"ctrl+shift+d\"], \"command\": \"duplicate_line\" },\n\n\t{ \"keys\": [\"ctrl+`\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"console\", \"toggle\": true} },\n\n\t{ \"keys\": [\"alt+/\"], \"command\": \"auto_complete\" },\n\t{ \"keys\": [\"alt+/\"], \"command\": \"replace_completion_with_auto_complete\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"last_command\", \"operator\": \"equal\", \"operand\": \"insert_best_completion\" },\n\t\t\t{ \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false },\n\t\t\t{ \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"ctrl+alt+shift+p\"], \"command\": \"show_scope_name\" },\n\n\t{ \"keys\": [\"f7\"], \"command\": \"build\" },\n\t{ \"keys\": [\"ctrl+b\"], \"command\": \"build\" },\n\t{ \"keys\": [\"ctrl+shift+b\"], \"command\": \"build\", \"args\": {\"select\": true} },\n\t{ \"keys\": [\"ctrl+break\"], \"command\": \"cancel_build\" },\n\n\t{ \"keys\": [\"ctrl+t\"], \"command\": \"transpose\" },\n\n\t{ \"keys\": [\"f9\"], \"command\": \"sort_lines\", \"args\": {\"case_sensitive\": false} },\n\t{ \"keys\": [\"ctrl+f9\"], \"command\": \"sort_lines\", \"args\": {\"case_sensitive\": true} },\n\n\t// Auto-pair quotes\n\t{ \"keys\": [\"\\\"\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\"$0\\\"\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"[\\\"a-zA-Z0-9_]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.double - punctuation.definition.string.end\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"\\\"\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\"${0:$SELECTION}\\\"\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"\\\"\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\"\", \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"not_equal\", \"operand\": \"punctuation.definition.string.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.double - punctuation.definition.string.end\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\"$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\"\", \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"not_equal\", \"operand\": \"punctuation.definition.string.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.double - punctuation.definition.string.end\", \"match_all\": true },\n\t\t]\n\t},\n\n\t// Auto-pair single quotes\n\t{ \"keys\": [\"'\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"'$0'\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single - punctuation.definition.string.end\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"'\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"'${0:$SELECTION}'\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"'\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^'\", \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"not_equal\", \"operand\": \"punctuation.definition.string.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single - punctuation.definition.string.end\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"'$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^'\", \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"not_equal\", \"operand\": \"punctuation.definition.string.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single - punctuation.definition.string.end\", \"match_all\": true },\n\t\t]\n\t},\n\n\t// Auto-pair brackets\n\t{ \"keys\": [\"(\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"($0)\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|;|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"(\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"(${0:$SELECTION})\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\")\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\($\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\)\", \"match_all\": true }\n\t\t]\n\t},\n\n\t// Auto-pair square brackets\n\t{ \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[$0]\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|;|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[${0:$SELECTION}]\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"]\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\]\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\[$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\]\", \"match_all\": true }\n\t\t]\n\t},\n\n\t// Auto-pair curly brackets\n\t{ \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{$0}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"{\"], \"command\": \"wrap_block\", \"args\": {\"begin\": \"{\", \"end\": \"}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"indented_block\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{${0:$SELECTION}}\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"}\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Add Line in Braces.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Add Line in Braces.sublime-macro\"}, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n\t\t]\n\t},\n\n\t{ \"keys\": [\"enter\"], \"command\": \"auto_indent_tag\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"punctuation.definition.tag.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \">$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^</\", \"match_all\": true },\n\t\t]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"auto_indent_tag\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n\t\t\t{ \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"punctuation.definition.tag.begin\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \">$\", \"match_all\": true },\n\t\t\t{ \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^</\", \"match_all\": true },\n\t\t]\n\t},\n\n\t{\n\t\t\"keys\": [\"alt+shift+1\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 1.0],\n\t\t\t\"rows\": [0.0, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+2\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 0.5, 1.0],\n\t\t\t\"rows\": [0.0, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [1, 0, 2, 1]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+3\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 0.33, 0.66, 1.0],\n\t\t\t\"rows\": [0.0, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+4\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 0.25, 0.5, 0.75, 1.0],\n\t\t\t\"rows\": [0.0, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1], [3, 0, 4, 1]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+8\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 1.0],\n\t\t\t\"rows\": [0.0, 0.5, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [0, 1, 1, 2]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+9\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 1.0],\n\t\t\t\"rows\": [0.0, 0.33, 0.66, 1.0],\n\t\t\t\"cells\": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]]\n\t\t}\n\t},\n\t{\n\t\t\"keys\": [\"alt+shift+5\"],\n\t\t\"command\": \"set_layout\",\n\t\t\"args\":\n\t\t{\n\t\t\t\"cols\": [0.0, 0.5, 1.0],\n\t\t\t\"rows\": [0.0, 0.5, 1.0],\n\t\t\t\"cells\":\n\t\t\t[\n\t\t\t\t[0, 0, 1, 1], [1, 0, 2, 1],\n\t\t\t\t[0, 1, 1, 2], [1, 1, 2, 2]\n\t\t\t]\n\t\t}\n\t},\n\t{ \"keys\": [\"ctrl+1\"], \"command\": \"focus_group\", \"args\": { \"group\": 0 } },\n\t{ \"keys\": [\"ctrl+2\"], \"command\": \"focus_group\", \"args\": { \"group\": 1 } },\n\t{ \"keys\": [\"ctrl+3\"], \"command\": \"focus_group\", \"args\": { \"group\": 2 } },\n\t{ \"keys\": [\"ctrl+4\"], \"command\": \"focus_group\", \"args\": { \"group\": 3 } },\n\t{ \"keys\": [\"ctrl+5\"], \"command\": \"focus_group\", \"args\": { \"group\": 4 } },\n\t{ \"keys\": [\"ctrl+6\"], \"command\": \"focus_group\", \"args\": { \"group\": 5 } },\n\t{ \"keys\": [\"ctrl+7\"], \"command\": \"focus_group\", \"args\": { \"group\": 6 } },\n\t{ \"keys\": [\"ctrl+8\"], \"command\": \"focus_group\", \"args\": { \"group\": 7 } },\n\t{ \"keys\": [\"ctrl+9\"], \"command\": \"focus_group\", \"args\": { \"group\": 8 } },\n\t{ \"keys\": [\"ctrl+shift+1\"], \"command\": \"move_to_group\", \"args\": { \"group\": 0 } },\n\t{ \"keys\": [\"ctrl+shift+2\"], \"command\": \"move_to_group\", \"args\": { \"group\": 1 } },\n\t{ \"keys\": [\"ctrl+shift+3\"], \"command\": \"move_to_group\", \"args\": { \"group\": 2 } },\n\t{ \"keys\": [\"ctrl+shift+4\"], \"command\": \"move_to_group\", \"args\": { \"group\": 3 } },\n\t{ \"keys\": [\"ctrl+shift+5\"], \"command\": \"move_to_group\", \"args\": { \"group\": 4 } },\n\t{ \"keys\": [\"ctrl+shift+6\"], \"command\": \"move_to_group\", \"args\": { \"group\": 5 } },\n\t{ \"keys\": [\"ctrl+shift+7\"], \"command\": \"move_to_group\", \"args\": { \"group\": 6 } },\n\t{ \"keys\": [\"ctrl+shift+8\"], \"command\": \"move_to_group\", \"args\": { \"group\": 7 } },\n\t{ \"keys\": [\"ctrl+shift+9\"], \"command\": \"move_to_group\", \"args\": { \"group\": 8 } },\n\t{ \"keys\": [\"ctrl+0\"], \"command\": \"focus_side_bar\" },\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+up\"], \"command\": \"new_pane\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+shift+up\"], \"command\": \"new_pane\", \"args\": {\"move\": false} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+down\"], \"command\": \"close_pane\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+left\"], \"command\": \"focus_neighboring_group\", \"args\": {\"forward\": false} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+right\"], \"command\": \"focus_neighboring_group\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+shift+left\"], \"command\": \"move_to_neighboring_group\", \"args\": {\"forward\": false} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+shift+right\"], \"command\": \"move_to_neighboring_group\" },\n\n\t{ \"keys\": [\"alt+1\"], \"command\": \"select_by_index\", \"args\": { \"index\": 0 } },\n\t{ \"keys\": [\"alt+2\"], \"command\": \"select_by_index\", \"args\": { \"index\": 1 } },\n\t{ \"keys\": [\"alt+3\"], \"command\": \"select_by_index\", \"args\": { \"index\": 2 } },\n\t{ \"keys\": [\"alt+4\"], \"command\": \"select_by_index\", \"args\": { \"index\": 3 } },\n\t{ \"keys\": [\"alt+5\"], \"command\": \"select_by_index\", \"args\": { \"index\": 4 } },\n\t{ \"keys\": [\"alt+6\"], \"command\": \"select_by_index\", \"args\": { \"index\": 5 } },\n\t{ \"keys\": [\"alt+7\"], \"command\": \"select_by_index\", \"args\": { \"index\": 6 } },\n\t{ \"keys\": [\"alt+8\"], \"command\": \"select_by_index\", \"args\": { \"index\": 7 } },\n\t{ \"keys\": [\"alt+9\"], \"command\": \"select_by_index\", \"args\": { \"index\": 8 } },\n\t{ \"keys\": [\"alt+0\"], \"command\": \"select_by_index\", \"args\": { \"index\": 9 } },\n\n\t{ \"keys\": [\"f2\"], \"command\": \"next_bookmark\" },\n\t{ \"keys\": [\"shift+f2\"], \"command\": \"prev_bookmark\" },\n\t{ \"keys\": [\"ctrl+f2\"], \"command\": \"toggle_bookmark\" },\n\t{ \"keys\": [\"ctrl+shift+f2\"], \"command\": \"clear_bookmarks\" },\n\t{ \"keys\": [\"alt+f2\"], \"command\": \"select_all_bookmarks\" },\n\n\t{ \"keys\": [\"ctrl+shift+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete Line.sublime-macro\"} },\n\n\t{ \"keys\": [\"alt+q\"], \"command\": \"wrap_lines\" },\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+u\"], \"command\": \"upper_case\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+l\"], \"command\": \"lower_case\" },\n\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+space\"], \"command\": \"set_mark\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+a\"], \"command\": \"select_to_mark\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+w\"], \"command\": \"delete_to_mark\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+x\"], \"command\": \"swap_with_mark\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+y\"], \"command\": \"yank\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"res://Packages/Default/Delete to Hard BOL.sublime-macro\"} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+g\"], \"command\": \"clear_bookmarks\", \"args\": {\"name\": \"mark\"} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+c\"], \"command\": \"show_at_center\" },\n\n\t{ \"keys\": [\"ctrl++\"], \"command\": \"increase_font_size\" },\n\t{ \"keys\": [\"ctrl+=\"], \"command\": \"increase_font_size\" },\n\t{ \"keys\": [\"ctrl+-\"], \"command\": \"decrease_font_size\" },\n\n\t{ \"keys\": [\"alt+shift+w\"], \"command\": \"insert_snippet\", \"args\": { \"name\": \"Packages/XML/Snippets/long-tag.sublime-snippet\" } },\n\n\t{ \"keys\": [\"ctrl+shift+[\"], \"command\": \"fold\" },\n\t{ \"keys\": [\"ctrl+shift+]\"], \"command\": \"unfold\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+1\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 1} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+2\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 2} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+3\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 3} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+4\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 4} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+5\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 5} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+6\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 6} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+7\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 7} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+8\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 8} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+9\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 9} },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+0\"], \"command\": \"unfold_all\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+j\"], \"command\": \"unfold_all\" },\n\t{ \"keys\": [\"ctrl+k\", \"ctrl+t\"], \"command\": \"fold_tag_attributes\" },\n\n\t{ \"keys\": [\"context_menu\"], \"command\": \"context_menu\" },\n\n\t{ \"keys\": [\"alt+c\"], \"command\": \"toggle_case_sensitive\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+r\"], \"command\": \"toggle_regex\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+w\"], \"command\": \"toggle_whole_word\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\t{ \"keys\": [\"alt+a\"], \"command\": \"toggle_preserve_case\", \"context\":\n\t\t[\n\t\t\t{ \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n\t\t]\n\t},\n\n\t// Find panel key bindings\n\t{ \"keys\": [\"enter\"], \"command\": \"find_next\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n\t\t \"context\": [{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\n\t// Replace panel key bindings\n\t{ \"keys\": [\"enter\"], \"command\": \"find_next\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n\t\t\"context\": [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"ctrl+alt+enter\"], \"command\": \"replace_all\", \"args\": {\"close_panel\": true},\n\t\t \"context\": [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\n\t// Incremental find panel key bindings\n\t{ \"keys\": [\"enter\"], \"command\": \"hide_panel\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n\t\t[{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\t{ \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n\t\t\"context\": [{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n\t},\n\n\t// HTML, XML close tag\n\t{ \"keys\": [\"/\"], \"command\": \"close_tag\", \"args\": { \"insert_slash\": true }, \"context\":\n\t\t[\n\t\t\t{ \"key\": \"selector\", \"operator\": \"equal\", \"operand\": \"(text.html, text.xml) - string - comment\", \"match_all\": true },\n\t\t\t{ \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \".*<$\", \"match_all\": true },\n\t\t\t{ \"key\": \"setting.auto_close_tags\" }\n\t\t]\n\t}\n]\n",
					"file": "/home/ytl/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
					"file_size": -1,
					"file_write_time": -1,
					"settings":
					{
						"buffer_size": 36243,
						"line_ending": "Unix",
						"read_only": true,
						"scratch": true
					}
				},
				{
					"file": "/home/ytl/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
					"settings":
					{
						"buffer_size": 315,
						"line_ending": "Unix"
					}
				}
			],
			"build_system": "",
			"build_system_choices":
			[
			],
			"build_varint": "",
			"command_palette":
			{
				"height": 76.0,
				"last_filter": "pci",
				"selected_items":
				[
					[
						"pci",
						"Package Control: Install Package"
					],
					[
						"pcl",
						"Package Control: List Packages"
					],
					[
						"Package Control: l",
						"Package Control: List Packages"
					],
					[
						"Package Control: i",
						"Package Control: Install Package"
					]
				],
				"width": 471.0
			},
			"console":
			{
				"height": 126.0,
				"history":
				[
					"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
				]
			},
			"distraction_free":
			{
				"menu_visible": true,
				"show_minimap": false,
				"show_open_files": false,
				"show_tabs": false,
				"side_bar_visible": false,
				"status_bar_visible": false
			},
			"file_history":
			[
				"/home/ytl/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/Package Control.user-ca-bundle",
				"/home/ytl/.config/sublime-text-3/Packages/User/Package Control.sublime-settings",
				"/home/ytl/platforms/default_platform/pg/lua/meitu_mvvideo11_filter.lua",
				"/home/ytl/platforms/comm_platform/sp_lua/meitu/mvvideo11_access.lua",
				"/home/ytl/platforms/default_platform/pg/lua/meitu_mvvideo10_filter.lua",
				"/home/ytl/platforms/comm_platform/sp_lua/meitu/mvvideo10_access.lua",
				"/opt/platforms/uce/conf/balancer.lua",
				"/opt/platforms/lualib/ant/frame.lua",
				"/opt/platforms/hsm/conf/hsm.conf",
				"/opt/platforms/hsm/conf/admin.conf",
				"/home/ytl/lua/test.lua",
				"/tmp/diff",
				"/home/ytl/.config/sublime-text-3/Packages/ConvertToUTF8/ConvertToUTF8.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/ConvertToUTF8.sublime-settings",
				"/home/ytl/.config/sublime-text-3/Packages/User/CTags.sublime-settings",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_core_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_parse.c",
				"/home/ytl/Desktop/WeChat.lnk",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/os/win32/ngx_win32_config.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_conf_file.c",
				"/home/ytl/ant/src/ngx_cache_enhanced/ngx_http_cache_enhanced_module.c",
				"/home/ytl/Desktop/notebook",
				"/home/ytl/.wine/system.reg",
				"/home/ytl/.wine/drive_c/windows/win.ini",
				"/home/ytl/Desktop/ftp",
				"/home/ytl/ant/src/ngx_cache_enhanced/ngx_http_cache_purge_module.c",
				"/data/webroot/m3u8/r0021jrku7o.320086.ts.m3u8",
				"/home/ytl/Desktop/1.c",
				"/home/ytl/Desktop/test.c",
				"/home/ytl/Desktop/t",
				"/opt/platforms/lualib/ant/request.lua",
				"/home/ytl/Desktop/struct ngx_http_request_t.c",
				"/home/ytl/1",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_request.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_request.h",
				"/home/ytl/ant/src/ngx_mp4_seek/ngx_http_mp4_seek_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_write_filter_module.c",
				"/home/ytl/his",
				"/home/ytl/ant/demo/platforms/lualib/ant/frame.lua",
				"/home/ytl/ant/src/ngx_traffic_log_module/ngx_http_traffic_log_filter_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_variables.h",
				"/data/webroot/sdmb.ts",
				"/data/webroot/sdmb.mp4",
				"/data/webroot/sdmb.",
				"/home/ytl/ant/demo/config.lua",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_core_module.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_conf_file.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_variables.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/os/unix/ngx_process_cycle.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/os/unix/ngx_process.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_string.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_core.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/LuaJIT-2.1-20160517/src/lj_def.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_config.h",
				"/home/ytl/ngx_http_mp4_seek_module.c",
				"/home/ytl/config.lua",
				"/home/ytl/ant/src/ngx_openresty/build/ngx_lua-0.10.6/t/073-backtrace.t",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_log.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_request_body.c.orig",
				"/home/ytl/ant/demo/platforms/lualib/plugin/demo/access.lua",
				"/home/ytl/Desktop/plan.md",
				"/home/ytl/platforms/lualib/ant/redis.lua",
				"/home/ytl/Desktop/tc_access.lua",
				"/home/ytl/Downloads/RedisLive/src/www/index.html",
				"/home/ytl/platforms/mgtv_platform/hsm/conf/admin.conf",
				"/home/ytl/platforms/mgtv_platform/sp_lua/mgtv/access_videost.lua",
				"/home/ytl/Desktop/test.lua",
				"/home/ytl/Desktop/临时/notebook",
				"/home/ytl/Desktop/文档/plan.md",
				"/home/ytl/ant/demo/platforms2/config.lua",
				"/home/ytl/cdn_platforms/default_platform/comm/header_clear.conf",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/mgtv/access_videost.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/mgtv/access_downst.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/yunduan/access_downst.lua",
				"/home/ytl/cdn_platforms/mgtv_platform/sp_lua/yunduan/access_videost.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/yunduan/access_downst.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/yunduan/access_videost.lua",
				"/home/ytl/platforms/mgtv_platform/sp_lua/mgtv/access_downst.lua",
				"/home/ytl/platforms/lualib/ant/request.lua",
				"/home/ytl/platforms/comm_platform/sp/templates/hsm_channel.conf.j2",
				"/home/ytl/platforms/mgtv_platform/sp/templates/hsm_channel.conf.j2",
				"/home/ytl/platforms/lualib/ant/admin.lua",
				"/home/ytl/platforms/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/platforms/comm_platform/hsm/conf/admin.conf",
				"/home/ytl/main.c",
				"/home/ytl/test_ant.sh",
				"/home/ytl/ant/demo/platforms2/hsm/conf/hsm.conf",
				"/home/ytl/ant/demo/platforms2/sp/redis_cache/hsm_redis_cache.conf",
				"/home/ytl/ant/demo/platforms/default_platform/lbf/conf/header_filter.lua",
				"/home/ytl/ant/demo/platforms/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/ant/demo/platforms2/sp_lua/demo_sp/access.lua",
				"/home/ytl/ant/demo/platforms2/sp/demo_sp/hsm_demo.conf",
				"/home/ytl/ant/demo/platforms2/pg/conf/pg.conf",
				"/home/ytl/ant/demo/platforms2/sp/demo_sp/pg_demo.conf",
				"/home/ytl/ant/demo/platforms/demo_platform/hsm/conf/hsm.conf",
				"/home/ytl/ant/demo/platforms2/default_platform/env/env.json",
				"/home/ytl/ant/demo/platforms2/default_platform/lbf/conf/lbf.conf",
				"/home/ytl/ant/demo/platforms2/demo_platform/env/env.json",
				"/home/ytl/ant/demo/platforms2/hsm/conf/admin.conf",
				"/home/ytl/ant/demo/platforms2/demo_platform/env/auth.conf",
				"/home/ytl/ant/demo/platforms/default_platform/env/env.json",
				"/home/ytl/ant/demo/platforms/demo_platform/env/env.json",
				"/home/ytl/Downloads/zh.reg",
				"/home/ytl/sublime-imfix.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/Desktop/临时/现网日志.xlsx",
				"/home/ytl/Desktop/临时/4杨廷龙.JPG",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/stream/ngx_stream_proxy_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/ngx_http_upstream.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event_pipe.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/core/ngx_connection.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.h",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/http/ngx_http_upstream.c.orig",
				"/home/ytl/ant/src/ngx_openresty/bundle/nginx-1.11.2/src/event/ngx_event_pipe.c",
				"/home/ytl/ant/src/ngx_openresty/bundle/resty.index",
				"/home/ytl/ant/src/ngx_openresty/build/pod/nginx/ngx_http_mp4_module.pod",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/stream/ngx_stream_proxy_module.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/event/ngx_event_pipe.c",
				"/home/ytl/ant/src/ngx_openresty/build/nginx-1.11.2/src/http/modules/ngx_http_proxy_module.c",
				"/home/ytl/nginx/src/core/ngx_parse.c",
				"/home/ytl/nginx/src/core/ngx_conf_file.c",
				"/home/ytl/nginx/src/http/ngx_http_core_module.c",
				"/home/ytl/nginx/src/http/ngx_http_core_module.h",
				"/home/ytl/nginx/src/http/modules/ngx_http_proxy_module.c"
			],
			"find":
			{
				"height": 27.0
			},
			"find_in_files":
			{
				"height": 95.0,
				"where_history":
				[
					"",
					"<open folders>,/home/ytl/ant",
					"<open folders>"
				]
			},
			"find_state":
			{
				"case_sensitive": false,
				"find_history":
				[
					"failTimeOut",
					"setCacheControl1",
					"currPeer",
					"roundWeightPolicy",
					"checkDown",
					"initHealthCheck",
					"expire",
					" down = false",
					", down = false",
					" failed = 0,",
					"add_timer",
					"product",
					"maxFails",
					"arg_start",
					"start",
					"expire",
					"limitafter",
					"limitrate",
					"limit_rate",
					"Tahoma",
					"purge_time",
					"ngx_http_cache_purge_record_walk",
					"要求",
					"ngx_http_finalize_request",
					"ngx_http_post_request",
					"ngx_http_postpone_filter_add",
					"ngx_http_subrequest",
					"ngx_http_postponed_request_t",
					"limit_rate_after",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_arg_discard",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_process_finish",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_mp4_seek_range_size",
					"ngx_http_mp4_seek_del_header",
					"ngx_http_mp4_seek_subrequest_send",
					"getSessionID",
					"getBakConfig",
					"updateConfig",
					"NGX_HTTP_MP4_SEEK_STATE_INIT",
					"ngx_http_core_main_conf_t",
					"ngx_http_mp4_seek_init",
					"ngx_http_mp4_seek_read_trak_atom",
					"ngx_http_mp4_seek_read_atom",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_http_mp4_seek_subrequest_send",
					"ctx->range",
					"ngx_http_variable_mp4_range",
					"ctx->range",
					"mp4_range",
					"ant_mp4_seek",
					"key",
					"mp4",
					"ngx_http_mp4_seek_header_filter",
					"args",
					"ctx->args",
					"}\n",
					"ngx_http_mp4_seek_subrequest_send",
					"mlcf->start",
					"mlcf",
					"mp4_value",
					"mp4_end",
					"mp4_start",
					"ant_mp4_seek",
					"ngx_http_mp4_seek_merge_conf",
					"ngx_http_mp4_seek_create_conf",
					"NGX_CONF_UNSET_SIZE",
					"ngx_http_mp4_seek_create_conf",
					"ngx_http_mp4_seek_conf_t",
					"ant_mp4_seek",
					"    }",
					"ant_mp4_seek",
					"ngx_spawn_process",
					"ngx_start_worker_processes",
					"ngx_worker_process_cycle",
					"ngx_http_variable_t",
					"ngx_http_mp4_seek_vars",
					"ngx_worker_process_cycle",
					"ngx_cache_purge_process_handler",
					"circle",
					"ngx_http_variable_value_t",
					"ngx_http_mp4_seek_get_var",
					"ant_mp4_seek",
					"ngx_http_mp4_seek_get_var",
					"ngx_http_mp4_seek_vars",
					"ngx_http_mp4_seek_get_var",
					"start",
					"ngx_http_mp4_seek_conf_t",
					"mlcf",
					"state",
					"NGX_HTTP_MP4_SEEK_STATE_INIT",
					"state",
					"ngx_http_mp4_seek_subrequest_send",
					"ngx_http_mp4_seek_subrequest_done",
					"ngx_log_error",
					"proxy_mp4_seek",
					"start",
					"ngx_sprintf",
					"printf",
					"ngx_str_print",
					"ngx_str_printf",
					"ngx_printf",
					"proxy_mp4_seek",
					"ngx_log_error",
					"ngx_log",
					"ant_mp4_seek",
					"handleCacheKey",
					"confTbale",
					"channel",
					"8888",
					"***\n",
					"end",
					"header_filter_lua",
					"ngx_http_proxy_merge_loc_conf",
					"ngx_http_proxy_create_loc_conf",
					"ngx_http_proxy_create_main_conf",
					"ngx_http_proxy_vars",
					"ngx_http_proxy_add_variables",
					"ngx_http_proxy_vars",
					"ngx_http_proxy_add_variables",
					"proxy_max_temp_file_size",
					"NGX_HTTP_UPSTREAM_IGN_XA_REDIRECT",
					"ngx_http_upstream_process_buffering",
					"ngx_http_upstream_process_limit_rate"
				],
				"highlight": true,
				"in_selection": false,
				"preserve_case": false,
				"regex": false,
				"replace_history":
				[
				],
				"reverse": false,
				"show_context": true,
				"use_buffer2": true,
				"whole_word": false,
				"wrap": true
			},
			"groups":
			[
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 0,
							"file": "/home/ytl/.config/sublime-text-3/Packages/Default/Default (Linux).sublime-keymap",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 36243,
								"regions":
								{
								},
								"selection":
								[
									[
										36243,
										36243
									]
								],
								"settings":
								{
									"edit_settings_other_view_id": 186,
									"edit_settings_view": "base",
									"syntax": "Packages/JavaScript/JSON.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 1,
							"type": "text"
						}
					]
				},
				{
					"selected": 0,
					"sheets":
					[
						{
							"buffer": 1,
							"file": "/home/ytl/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
							"semi_transient": false,
							"settings":
							{
								"buffer_size": 315,
								"regions":
								{
								},
								"selection":
								[
									[
										312,
										312
									]
								],
								"settings":
								{
									"edit_settings_other_view_id": 185,
									"edit_settings_view": "user",
									"origin_encoding": "ASCII",
									"syntax": "Packages/JavaScript/JSON.sublime-syntax"
								},
								"translation.x": 0.0,
								"translation.y": 0.0,
								"zoom_level": 1.0
							},
							"stack_index": 0,
							"type": "text"
						}
					]
				}
			],
			"incremental_find":
			{
				"height": 27.0
			},
			"input":
			{
				"height": 37.0
			},
			"layout":
			{
				"cells":
				[
					[
						0,
						0,
						1,
						1
					],
					[
						1,
						0,
						2,
						1
					]
				],
				"cols":
				[
					0.0,
					0.5,
					1.0
				],
				"rows":
				[
					0.0,
					1.0
				]
			},
			"menu_visible": true,
			"output.exec":
			{
				"height": 126.0
			},
			"output.find_results":
			{
				"height": 0.0
			},
			"pinned_build_system": "",
			"position": "0,0,0,0,0,50,77,694,557,3286,1080",
			"project": "",
			"replace":
			{
				"height": 50.0
			},
			"save_all_on_build": true,
			"select_file":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
					[
						"673",
						"src/ngx_openresty/build/ngx_lua-0.10.6/t/073-backtrace.t"
					]
				],
				"width": 0.0
			},
			"select_project":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"select_symbol":
			{
				"height": 0.0,
				"last_filter": "",
				"selected_items":
				[
				],
				"width": 0.0
			},
			"selected_group": 1,
			"settings":
			{
			},
			"show_minimap": true,
			"show_open_files": true,
			"show_tabs": true,
			"side_bar_visible": false,
			"side_bar_width": 221.0,
			"status_bar_visible": true,
			"template_settings":
			{
			},
			"window_id": 82,
			"workspace_name": ""
		}
	],
	"workspaces":
	{
		"recent_workspaces":
		[
		]
	}
}
