
" install vim-plug
" curl -vfLo ~/.vim/autoload/plug.vim https://raw.github.com/junegunn/vim-plug/master/plug.vim

" auto open the last edit line
if has("autocmd")
    au BufReadPost * if line("'\"") > 1 && line ("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

noremap H ^
noremap L $

" replace double @ to email
iabbrev @@ ytlm1314@gmail.com

set nu
set shiftwidth=4
set tabstop=4
set expandtab

set noswapfile
set nobackup
set smartindent

set history=1000
set nobackup
" set ruler
" set cursorline
set scrolloff=1
set laststatus=2
set backspace=indent,eol,start
set hlsearch

set showcmd

set nocompatible

set statusline=%F\ [TYPE=%Y]\ [POS:%l/%v][%p%%]\ [LEN:%l/%L]\ %m

" set ignorecase smartcase

set fileencodings=ucs-bom,utf-8,utf-16,gbk,big5,gb18030,latin1

set shortmess+=c
set t_ti= t_te=
set mouse-=a

autocmd BufWritePre * %s/\s\+$//e

filetype plugin indent on

let mapleader=","
let maplocalleader="\\"

noremap <leader>sv :source $MYVIMRC<cr>
noremap <leader>ev :split $MYVIMRC<cr>

" press <space> to select a word
noremap <space> viw

set pastetoggle=<F12>

call plug#begin('~/.vim/plugged')

" fzf
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" YouCompleteMe
Plug 'Valloric/YouCompleteMe', { 'do': './install.py --clang-completer' }

" nerdcommenter
Plug 'scrooloose/nerdcommenter'

" taglist
Plug 'vim-scripts/taglist.vim'

" ultisnips
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

" solarized
" Plug 'altercation/vim-colors-solarized', { 'do': 'ln -s ~/.vim/plugged/vim-colors-solarized/colors ~/.vim/colors'}

call plug#end()

set completeopt=longest,menu

" fzf
noremap <C-p> :FZF<cr>

" ultisnips
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" taglist
let Tlist_Ctags_Cmd='/usr/bin/ctags'
let Tlist_Show_One_File=1
let Tlist_WinWidth=60
let Tlist_Exit_OnlyWindow=1
let Tlist_Use_Right_Window = 1

noremap tl :TlistToggle<cr>

" nerdcommenter
let g:NERDSpaceDelims = 1
let g:NERDCompactSexyComs = 1
let g:NERDDefaultAlign = 'left'
let g:NERDAltDelims_java = 1
let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }
let g:NERDCommentEmptyLines = 1
let g:NERDTrimTrailingWhitespace = 1

" YouCompleteMe
let g:ycm_global_ycm_extra_conf='~/.vim/ycm_extra_conf.py'
let g:ycm_cache_omnifunc=1
let g:ycm_collect_identifiers_from_comments_and_strings=1
let g:ycm_complete_in_comments=1
let g:ycm_complete_in_strings=1
let g:ycm_collect_identifiers_from_tags_files=1

" theme
" syntax enable

" set t_Co=256
" let g:solarized_termcolors=16

" set background=dark
" colorscheme solarized

if exists('$TMUX')
    set term=screen-256color
endif

function! WrapForTmux(s)
    if !exists('$TMUX')
        return a:s
    endif

    let tmux_start = "\<Esc>Ptmux;"
    let tmux_end = "\<Esc>\\"

    return tmux_start . substitute(a:s, "\<Esc>", "\<Esc>\<Esc>", 'g') . tmux_end
endfunction

let &t_SI .= WrapForTmux("\<Esc>[?2004h")
let &t_EI .= WrapForTmux("\<Esc>[?2004l")

function! XTermPasteBegin()
    set pastetoggle=<Esc>[201~
    set paste
    return ""
endfunction

inoremap <special> <expr> <Esc>[200~ XTermPasteBegin()

autocmd BufNewFile *.sh,*.py exec ":call AutoSetFileHead()"
function! AutoSetFileHead()
    if &filetype == 'sh'
        call append(0, "\#!/usr/bin/env bash")
        call cursor(1, 0, 0)
    endif

    if &filetype == 'python'
        call append(0, "\#!/usr/bin/env python")
        call append(1, "\# _*_ encoding: utf-8 _*_")
        call cursor(2, 0, 0)
    endif
endfunc
